{
  "api/August.AugustAction.html": {
    "href": "api/August.AugustAction.html",
    "title": "Class AugustAction | ACME Documentation",
    "keywords": "Class AugustAction Inheritance System.Object AugustAction Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : August Assembly : AugustCore.dll Syntax public sealed class AugustAction : IDisposable Constructors | Improve this Doc View Source AugustAction(Object, MethodInfo) Declaration public AugustAction(object host, MethodInfo info) Parameters Type Name Description System.Object host System.Reflection.MethodInfo info Properties | Improve this Doc View Source Vaild Declaration public bool Vaild { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Invoke(Object[]) Declaration public void Invoke(object[] arguments) Parameters Type Name Description System.Object [] arguments Implements System.IDisposable"
  },
  "api/August.AugustFunc.html": {
    "href": "api/August.AugustFunc.html",
    "title": "Class AugustFunc | ACME Documentation",
    "keywords": "Class AugustFunc Inheritance System.Object AugustFunc Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : August Assembly : AugustCore.dll Syntax public sealed class AugustFunc : IDisposable Constructors | Improve this Doc View Source AugustFunc(Object, MethodInfo) Declaration public AugustFunc(object host, MethodInfo info) Parameters Type Name Description System.Object host System.Reflection.MethodInfo info Properties | Improve this Doc View Source Vaild Declaration public bool Vaild { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Invoke(Object[]) Declaration public object Invoke(object[] arguments) Parameters Type Name Description System.Object [] arguments Returns Type Description System.Object Implements System.IDisposable"
  },
  "api/August.CustomModule.html": {
    "href": "api/August.CustomModule.html",
    "title": "Class CustomModule | ACME Documentation",
    "keywords": "Class CustomModule The header of the module The module must at least one class inherit this in order to let framework identify. Inheritance System.Object CustomModule Implements ICustomModule Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : August Assembly : AugustCore.dll Syntax public abstract class CustomModule : ICustomModule Properties | Improve this Doc View Source BotRootPath Bot prefix path Declaration protected string BotRootPath { get; } Property Value Type Description System.String | Improve this Doc View Source ConfigPath Bot config path Declaration protected string ConfigPath { get; } Property Value Type Description System.String | Improve this Doc View Source DataPath Bot data path Declaration protected string DataPath { get; } Property Value Type Description System.String | Improve this Doc View Source frameworkContext Framework context Primary communication method with framework Declaration public FrameworkContext frameworkContext { get; set; } Property Value Type Description FrameworkContext | Improve this Doc View Source Info Declaration public abstract ModuleHeader Info { get; } Property Value Type Description ModuleHeader Methods | Improve this Doc View Source Initialize() Declaration public virtual void Initialize() | Improve this Doc View Source Start() Declaration public virtual void Start() | Improve this Doc View Source Update() Declaration public virtual void Update() Implements ICustomModule"
  },
  "api/August.CustomModuleCommand.html": {
    "href": "api/August.CustomModuleCommand.html",
    "title": "Class CustomModuleCommand | ACME Documentation",
    "keywords": "Class CustomModuleCommand Inheritance System.Object Discord.Commands.ModuleBase < Discord.Commands.SocketCommandContext > CustomModuleCommand Implements Discord.Commands.IModuleBase Inherited Members Discord.Commands.ModuleBase<Discord.Commands.SocketCommandContext>.ReplyAsync(System.String, System.Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[]) Discord.Commands.ModuleBase<Discord.Commands.SocketCommandContext>.BeforeExecute(Discord.Commands.CommandInfo) Discord.Commands.ModuleBase<Discord.Commands.SocketCommandContext>.AfterExecute(Discord.Commands.CommandInfo) Discord.Commands.ModuleBase<Discord.Commands.SocketCommandContext>.OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder) Discord.Commands.ModuleBase<Discord.Commands.SocketCommandContext>.Discord.Commands.IModuleBase.SetContext(Discord.Commands.ICommandContext) Discord.Commands.ModuleBase<Discord.Commands.SocketCommandContext>.Discord.Commands.IModuleBase.BeforeExecute(Discord.Commands.CommandInfo) Discord.Commands.ModuleBase<Discord.Commands.SocketCommandContext>.Discord.Commands.IModuleBase.AfterExecute(Discord.Commands.CommandInfo) Discord.Commands.ModuleBase<Discord.Commands.SocketCommandContext>.Discord.Commands.IModuleBase.OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder) Discord.Commands.ModuleBase<Discord.Commands.SocketCommandContext>.Context System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : August Assembly : AugustCore.dll Syntax public abstract class CustomModuleCommand : ModuleBase<SocketCommandContext>, IModuleBase Implements Discord.Commands.IModuleBase"
  },
  "api/August.CustomModuleComponent.html": {
    "href": "api/August.CustomModuleComponent.html",
    "title": "Class CustomModuleComponent | ACME Documentation",
    "keywords": "Class CustomModuleComponent Inheritance System.Object CustomModuleComponent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : August Assembly : AugustCore.dll Syntax public abstract class CustomModuleComponent"
  },
  "api/August.CustomModuleInteraction.html": {
    "href": "api/August.CustomModuleInteraction.html",
    "title": "Class CustomModuleInteraction | ACME Documentation",
    "keywords": "Class CustomModuleInteraction Inheritance System.Object Discord.Interactions.InteractionModuleBase < Discord.Interactions.SocketInteractionContext > CustomModuleInteraction Implements Discord.Interactions.IInteractionModuleBase Inherited Members Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.AfterExecute(Discord.Interactions.ICommandInfo) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.BeforeExecute(Discord.Interactions.ICommandInfo) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.BeforeExecuteAsync(Discord.Interactions.ICommandInfo) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.AfterExecuteAsync(Discord.Interactions.ICommandInfo) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.OnModuleBuilding(Discord.Interactions.InteractionService, Discord.Interactions.ModuleInfo) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.Construct(Discord.Interactions.Builders.ModuleBuilder, Discord.Interactions.InteractionService) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.DeferAsync(System.Boolean, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondAsync(System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithFileAsync(System.IO.Stream, System.String, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithFileAsync(System.String, System.String, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithFileAsync(Discord.FileAttachment, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithFilesAsync(System.Collections.Generic.IEnumerable<Discord.FileAttachment>, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.FollowupAsync(System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.FollowupWithFileAsync(System.IO.Stream, System.String, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.FollowupWithFileAsync(System.String, System.String, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.FollowupWithFileAsync(Discord.FileAttachment, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable<Discord.FileAttachment>, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.ReplyAsync(System.String, System.Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.GetOriginalResponseAsync(Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.ModifyOriginalResponseAsync(System.Action<Discord.MessageProperties>, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.DeleteOriginalResponseAsync() Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithModalAsync(Discord.Modal, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithModalAsync<TModal>(System.String, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.Discord.Interactions.IInteractionModuleBase.SetContext(Discord.IInteractionContext) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.Context System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : August Assembly : AugustCore.dll Syntax public abstract class CustomModuleInteraction : InteractionModuleBase<SocketInteractionContext>, IInteractionModuleBase Implements Discord.Interactions.IInteractionModuleBase"
  },
  "api/August.Debug.html": {
    "href": "api/August.Debug.html",
    "title": "Class Debug | ACME Documentation",
    "keywords": "Class Debug Global debug message handler Inheritance System.Object Debug Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : August Assembly : AugustCore.dll Syntax public sealed class Debug Examples Debug.Log(\"System\", \"Output message\", ConsoleColor.White); Methods | Improve this Doc View Source AddILog(IDebug) Adding new logger Declaration public static void AddILog(IDebug i) Parameters Type Name Description IDebug i Target logger | Improve this Doc View Source BotLog(String, String, Object, ConsoleColor) Bot message print Declaration public static void BotLog(string botname, string tag, object message, ConsoleColor color = ConsoleColor.White) Parameters Type Name Description System.String botname Bot name System.String tag Prefix System.Object message Message System.ConsoleColor color Console Color | Improve this Doc View Source Log(String, Object, ConsoleColor) Universal message print Declaration public static void Log(string tag, object message, ConsoleColor color = ConsoleColor.White) Parameters Type Name Description System.String tag Prefix System.Object message Message System.ConsoleColor color Console Color"
  },
  "api/August.FileController-1.html": {
    "href": "api/August.FileController-1.html",
    "title": "Class FileController<T> | ACME Documentation",
    "keywords": "Class FileController<T> Create a controller for module data type The data will update when file system changed is made. The subclass must have attribute FrameworkFilePathAttribute to mark the file path FrameworkFileFormatAttribute is optional for specified format Inheritance System.Object FileControllerBase FileController<T> Inherited Members FileControllerBase.type FileControllerBase.format FileControllerBase.path FileControllerBase.vaild System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : August Assembly : AugustCore.dll Syntax public abstract class FileController<T> : FileControllerBase Type Parameters Name Description T Data type Examples [FrameworkFilePathAttribute(\"FileName\", FileType.Data)] public NewDataController : FileController <NewData> { public static NewDataController controller; public NewDataController() { controller = this; } public override object DefaultData() => new NewData(); } public class NewData { public int value; } Constructors | Improve this Doc View Source FileController() Initiaization for the controller It will vailated to class and set the use properties. Declaration public FileController() Properties | Improve this Doc View Source data Actual data Declaration public T data { get; set; } Property Value Type Description T Methods | Improve this Doc View Source DefaultData() Default data Declaration public override object DefaultData() Returns Type Description System.Object Overrides FileControllerBase.DefaultData() | Improve this Doc View Source Load() Load data from target file Declaration public object Load() Returns Type Description System.Object | Improve this Doc View Source LoadData() Load data from target file to data properties If file does not exist, it will take default data to create one Declaration public void LoadData() | Improve this Doc View Source Save() Save current stored data Declaration public void Save() | Improve this Doc View Source SaveData(T) Set input data to current data and save it Declaration public void SaveData(T t) Parameters Type Name Description T t Input data"
  },
  "api/August.FileControllerBase.html": {
    "href": "api/August.FileControllerBase.html",
    "title": "Class FileControllerBase | ACME Documentation",
    "keywords": "Class FileControllerBase The base class of data controller Contain basic functionality and properties for the controller Inheritance System.Object FileControllerBase FileController<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : August Assembly : AugustCore.dll Syntax public abstract class FileControllerBase Properties | Improve this Doc View Source format Format of the data Declaration public FileFormat format { get; protected set; } Property Value Type Description FileFormat | Improve this Doc View Source path Bot folder relative path to file. Declaration public string path { get; protected set; } Property Value Type Description System.String | Improve this Doc View Source type Type of the data Declaration public FileType type { get; protected set; } Property Value Type Description FileType | Improve this Doc View Source vaild Check is this component is vaild Declaration public bool vaild { get; protected set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source DefaultData() Default data Declaration public abstract object DefaultData() Returns Type Description System.Object"
  },
  "api/August.FileFormat.html": {
    "href": "api/August.FileFormat.html",
    "title": "Enum FileFormat | ACME Documentation",
    "keywords": "Enum FileFormat Save format It will effect save data structure Namespace : August Assembly : AugustCore.dll Syntax public enum FileFormat Fields Name Description Binary Bson Json"
  },
  "api/August.FileType.html": {
    "href": "api/August.FileType.html",
    "title": "Enum FileType | ACME Documentation",
    "keywords": "Enum FileType Save type It will effect save frequency Namespace : August Assembly : AugustCore.dll Syntax public enum FileType Fields Name Description Config Only update to drive by menually call the save/load method Data When background counter to zero and user has update the data then it will automatically call the store method ImportantData Each update will automatically call the store method"
  },
  "api/August.FrameworkCommandAttribute.html": {
    "href": "api/August.FrameworkCommandAttribute.html",
    "title": "Class FrameworkCommandAttribute | ACME Documentation",
    "keywords": "Class FrameworkCommandAttribute Inheritance System.Object System.Attribute FrameworkCommandAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : August Assembly : AugustCore.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class FrameworkCommandAttribute : Attribute Constructors | Improve this Doc View Source FrameworkCommandAttribute(String) Declaration public FrameworkCommandAttribute(string name) Parameters Type Name Description System.String name Properties | Improve this Doc View Source name Declaration public string name { get; set; } Property Value Type Description System.String"
  },
  "api/August.FrameworkCommandPermission.html": {
    "href": "api/August.FrameworkCommandPermission.html",
    "title": "Enum FrameworkCommandPermission | ACME Documentation",
    "keywords": "Enum FrameworkCommandPermission This will define the accessibility for the command Namespace : August Assembly : AugustCore.dll Syntax public enum FrameworkCommandPermission Fields Name Description Private Can only be call by self Protected Can only be call by other modules, not expose by user interface Public Open for all"
  },
  "api/August.FrameworkContext.html": {
    "href": "api/August.FrameworkContext.html",
    "title": "Class FrameworkContext | ACME Documentation",
    "keywords": "Class FrameworkContext Inheritance System.Object FrameworkContext Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : August Assembly : AugustCore.dll Syntax public sealed class FrameworkContext Constructors | Improve this Doc View Source FrameworkContext(Func<String, String, AugustAction>, Func<String, String, Type, AugustFunc>) Declaration public FrameworkContext(Func<string, string, AugustAction> getFrameworkAction, Func<string, string, Type, AugustFunc> getFrameworkFunc) Parameters Type Name Description System.Func < System.String , System.String , AugustAction > getFrameworkAction System.Func < System.String , System.String , System.Type , AugustFunc > getFrameworkFunc Methods | Improve this Doc View Source GetCommandAction(String, String) Declaration public AugustAction GetCommandAction(string module, string command) Parameters Type Name Description System.String module System.String command Returns Type Description AugustAction | Improve this Doc View Source GetCommandFunc<T>(String, String) Declaration public AugustFunc GetCommandFunc<T>(string module, string command) Parameters Type Name Description System.String module System.String command Returns Type Description AugustFunc Type Parameters Name Description T | Improve this Doc View Source InvokeCommandAction(String, String, Object[]) Declaration public bool InvokeCommandAction(string module, string command, object[] arguments) Parameters Type Name Description System.String module System.String command System.Object [] arguments Returns Type Description System.Boolean | Improve this Doc View Source InvokeCommandFunc<T>(String, String, Object[], out T) Declaration public bool InvokeCommandFunc<T>(string module, string command, object[] arguments, out T result) Parameters Type Name Description System.String module System.String command System.Object [] arguments T result Returns Type Description System.Boolean Type Parameters Name Description T"
  },
  "api/August.FrameworkDescriptionAttribute.html": {
    "href": "api/August.FrameworkDescriptionAttribute.html",
    "title": "Class FrameworkDescriptionAttribute | ACME Documentation",
    "keywords": "Class FrameworkDescriptionAttribute Inheritance System.Object System.Attribute FrameworkDescriptionAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : August Assembly : AugustCore.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = false)] public class FrameworkDescriptionAttribute : Attribute Constructors | Improve this Doc View Source FrameworkDescriptionAttribute(String) Declaration public FrameworkDescriptionAttribute(string name) Parameters Type Name Description System.String name Properties | Improve this Doc View Source name Declaration public string name { get; set; } Property Value Type Description System.String"
  },
  "api/August.FrameworkFileFormatAttribute.html": {
    "href": "api/August.FrameworkFileFormatAttribute.html",
    "title": "Class FrameworkFileFormatAttribute | ACME Documentation",
    "keywords": "Class FrameworkFileFormatAttribute Inheritance System.Object System.Attribute FrameworkFileFormatAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : August Assembly : AugustCore.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, AllowMultiple = false)] public class FrameworkFileFormatAttribute : Attribute Constructors | Improve this Doc View Source FrameworkFileFormatAttribute(FileFormat) Declaration public FrameworkFileFormatAttribute(FileFormat type = FileFormat.Json) Parameters Type Name Description FileFormat type Properties | Improve this Doc View Source type Declaration public FileFormat type { get; set; } Property Value Type Description FileFormat"
  },
  "api/August.FrameworkFilePathAttribute.html": {
    "href": "api/August.FrameworkFilePathAttribute.html",
    "title": "Class FrameworkFilePathAttribute | ACME Documentation",
    "keywords": "Class FrameworkFilePathAttribute Inheritance System.Object System.Attribute FrameworkFilePathAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : August Assembly : AugustCore.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, AllowMultiple = false)] public class FrameworkFilePathAttribute : Attribute Constructors | Improve this Doc View Source FrameworkFilePathAttribute(String, FileType) Declaration public FrameworkFilePathAttribute(string name, FileType type = FileType.Data) Parameters Type Name Description System.String name FileType type Properties | Improve this Doc View Source name Declaration public string name { get; set; } Property Value Type Description System.String | Improve this Doc View Source type Declaration public FileType type { get; set; } Property Value Type Description FileType"
  },
  "api/August.FrameworkGroupAttribute.html": {
    "href": "api/August.FrameworkGroupAttribute.html",
    "title": "Class FrameworkGroupAttribute | ACME Documentation",
    "keywords": "Class FrameworkGroupAttribute Inheritance System.Object System.Attribute FrameworkGroupAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : August Assembly : AugustCore.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false)] public class FrameworkGroupAttribute : Attribute Constructors | Improve this Doc View Source FrameworkGroupAttribute(String) Declaration public FrameworkGroupAttribute(string name) Parameters Type Name Description System.String name Properties | Improve this Doc View Source name Declaration public string name { get; set; } Property Value Type Description System.String"
  },
  "api/August.html": {
    "href": "api/August.html",
    "title": "Namespace August | ACME Documentation",
    "keywords": "Namespace August Classes AugustAction AugustFunc CustomModule The header of the module The module must at least one class inherit this in order to let framework identify. CustomModuleCommand CustomModuleComponent CustomModuleInteraction Debug Global debug message handler FileController<T> Create a controller for module data type The data will update when file system changed is made. The subclass must have attribute FrameworkFilePathAttribute to mark the file path FrameworkFileFormatAttribute is optional for specified format FileControllerBase The base class of data controller Contain basic functionality and properties for the controller FrameworkCommandAttribute FrameworkContext FrameworkDescriptionAttribute FrameworkFileFormatAttribute FrameworkFilePathAttribute FrameworkGroupAttribute ModalComponentData Modal component result data structure ModalResultData Modal result data structure TextFileReader Create a .txt reader for module The data will update when file system changed is made. The subclass must have attribute FrameworkFilePathAttribute to mark the file path. Interfaces ICustomModule ICustomModuleComponent IDebug Enums FileFormat Save format It will effect save data structure FileType Save type It will effect save frequency FrameworkCommandPermission This will define the accessibility for the command"
  },
  "api/August.ICustomModule.html": {
    "href": "api/August.ICustomModule.html",
    "title": "Interface ICustomModule | ACME Documentation",
    "keywords": "Interface ICustomModule Namespace : August Assembly : AugustCore.dll Syntax public interface ICustomModule Properties | Improve this Doc View Source Info Module information Declaration ModuleHeader Info { get; } Property Value Type Description ModuleHeader Methods | Improve this Doc View Source Initialize() Fire after module is load Declaration void Initialize() | Improve this Doc View Source Start() Fire after every modules is load and bot is fully initialized Declaration void Start() | Improve this Doc View Source Update() Fire each framework update tick Declaration void Update()"
  },
  "api/August.ICustomModuleComponent.html": {
    "href": "api/August.ICustomModuleComponent.html",
    "title": "Interface ICustomModuleComponent | ACME Documentation",
    "keywords": "Interface ICustomModuleComponent Namespace : August Assembly : AugustCore.dll Syntax public interface ICustomModuleComponent"
  },
  "api/August.IDebug.html": {
    "href": "api/August.IDebug.html",
    "title": "Interface IDebug | ACME Documentation",
    "keywords": "Interface IDebug Namespace : August Assembly : AugustCore.dll Syntax public interface IDebug Methods | Improve this Doc View Source BotLog(String, String, Object, ConsoleColor) Declaration void BotLog(string tag, string botname, object message, ConsoleColor color) Parameters Type Name Description System.String tag System.String botname System.Object message System.ConsoleColor color | Improve this Doc View Source Log(String, Object, ConsoleColor) Declaration void Log(string tag, object message, ConsoleColor color) Parameters Type Name Description System.String tag System.Object message System.ConsoleColor color"
  },
  "api/August.ModalComponentData.html": {
    "href": "api/August.ModalComponentData.html",
    "title": "Class ModalComponentData | ACME Documentation",
    "keywords": "Class ModalComponentData Modal component result data structure Inheritance System.Object ModalComponentData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : August Assembly : AugustCore.dll Syntax [Serializable] public class ModalComponentData Fields | Improve this Doc View Source CustomId Component ID Declaration public string CustomId Field Value Type Description System.String | Improve this Doc View Source Type Type of component Declaration public ComponentType Type Field Value Type Description Discord.ComponentType | Improve this Doc View Source Value Primary result data Declaration public string Value Field Value Type Description System.String | Improve this Doc View Source Values Multiple values result data Declaration public IReadOnlyCollection<string> Values Field Value Type Description System.Collections.Generic.IReadOnlyCollection < System.String >"
  },
  "api/August.ModalResultData.html": {
    "href": "api/August.ModalResultData.html",
    "title": "Class ModalResultData | ACME Documentation",
    "keywords": "Class ModalResultData Modal result data structure Inheritance System.Object ModalResultData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : August Assembly : AugustCore.dll Syntax [Serializable] public class ModalResultData Fields | Improve this Doc View Source interaction Interaction context Declaration public SocketInteraction interaction Field Value Type Description Discord.WebSocket.SocketInteraction | Improve this Doc View Source Results List of component data Declaration public List<ModalComponentData> Results Field Value Type Description System.Collections.Generic.List < ModalComponentData > Properties | Improve this Doc View Source Item[String] Indexing the component by customID string Declaration public ModalComponentData this[string index] { get; set; } Parameters Type Name Description System.String index Property Value Type Description ModalComponentData"
  },
  "api/August.Setup.GlobalPath.html": {
    "href": "api/August.Setup.GlobalPath.html",
    "title": "Class GlobalPath | ACME Documentation",
    "keywords": "Class GlobalPath Global path const Inheritance System.Object GlobalPath Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : August.Setup Assembly : AugustCore.dll Syntax public static class GlobalPath Fields | Improve this Doc View Source BotsConfigFolder Config folder name Declaration public const string BotsConfigFolder = \"config\" Field Value Type Description System.String | Improve this Doc View Source BotsDataFolder Data folder name Declaration public const string BotsDataFolder = \"data\" Field Value Type Description System.String | Improve this Doc View Source BotsExecuteFile Execute file name Declaration public const string BotsExecuteFile = \"execute.json\" Field Value Type Description System.String | Improve this Doc View Source BotsIntentFile Intent file name Declaration public const string BotsIntentFile = \"intent.json\" Field Value Type Description System.String | Improve this Doc View Source BotsModFolder Module folder name Declaration public const string BotsModFolder = \"mods\" Field Value Type Description System.String | Improve this Doc View Source BotsRootFolder Bot folder name Declaration public const string BotsRootFolder = \"bots\" Field Value Type Description System.String | Improve this Doc View Source BotsSettingFile Setting file name Declaration public const string BotsSettingFile = \"setting.json\" Field Value Type Description System.String | Improve this Doc View Source FrameworkProperties Framework setting file name Declaration public const string FrameworkProperties = \"properties.json\" Field Value Type Description System.String"
  },
  "api/August.Setup.html": {
    "href": "api/August.Setup.html",
    "title": "Namespace August.Setup | ACME Documentation",
    "keywords": "Namespace August.Setup Classes GlobalPath Global path const Structs Properties Framework properties will effect the internal mechnism"
  },
  "api/August.Setup.Properties.html": {
    "href": "api/August.Setup.Properties.html",
    "title": "Struct Properties | ACME Documentation",
    "keywords": "Struct Properties Framework properties will effect the internal mechnism Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : August.Setup Assembly : AugustCore.dll Syntax [Serializable] public struct Properties Fields | Improve this Doc View Source UpdateMilliseconds Each update tick seconds Declaration public int UpdateMilliseconds Field Value Type Description System.Int32 Properties | Improve this Doc View Source Default Default properties setting data Declaration public static readonly Properties Default { get; } Property Value Type Description Properties"
  },
  "api/August.Struct.BotSetting.html": {
    "href": "api/August.Struct.BotSetting.html",
    "title": "Struct BotSetting | ACME Documentation",
    "keywords": "Struct BotSetting Bot profile setting The most important file Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : August.Struct Assembly : AugustCore.dll Syntax [Serializable] public struct BotSetting Fields | Improve this Doc View Source Color Console color code, Range from 0 - 16 Reference Declaration public int Color Field Value Type Description System.Int32 | Improve this Doc View Source GatewayIntentWarning Output intent warning Declaration public bool GatewayIntentWarning Field Value Type Description System.Boolean | Improve this Doc View Source LoadMods Loading modules name, Check your mods folder The filename must contain extension Declaration public string[] LoadMods Field Value Type Description System.String [] | Improve this Doc View Source Loglevel Log level for filter out the message, Range from 0 - 5 0: Output all 5: Output only most important message Declaration public int Loglevel Field Value Type Description System.Int32 | Improve this Doc View Source Name Bot name, will effect console output message Declaration public string Name Field Value Type Description System.String | Improve this Doc View Source Prefix Prefix for specified the command Declaration public string Prefix Field Value Type Description System.String | Improve this Doc View Source Syntax Syntax for specified the command Declaration public char Syntax Field Value Type Description System.Char | Improve this Doc View Source Token Bot Token Declaration public string Token Field Value Type Description System.String Properties | Improve this Doc View Source Default Declaration public static readonly BotSetting Default { get; } Property Value Type Description BotSetting"
  },
  "api/August.Struct.BotSettings.html": {
    "href": "api/August.Struct.BotSettings.html",
    "title": "Class BotSettings | ACME Documentation",
    "keywords": "Class BotSettings Bot setting collection Inheritance System.Object BotSettings Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : August.Struct Assembly : AugustCore.dll Syntax public class BotSettings Fields | Improve this Doc View Source execute Execute dict for discord events to framework commands Declaration public ExecutionSetting execute Field Value Type Description ExecutionSetting | Improve this Doc View Source intent Bot intent setting Declaration public GatewayIntent intent Field Value Type Description GatewayIntent | Improve this Doc View Source prefixPath Bot prefix absolute path Declaration public string prefixPath Field Value Type Description System.String | Improve this Doc View Source setting Bot profile Declaration public BotSetting setting Field Value Type Description BotSetting"
  },
  "api/August.Struct.ExecutionSetting.html": {
    "href": "api/August.Struct.ExecutionSetting.html",
    "title": "Struct ExecutionSetting | ACME Documentation",
    "keywords": "Struct ExecutionSetting Pair the discord events to framework commands Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : August.Struct Assembly : AugustCore.dll Syntax [Serializable] public struct ExecutionSetting Fields | Improve this Doc View Source GuildInviteCreated Declaration public string[] GuildInviteCreated Field Value Type Description System.String [] | Improve this Doc View Source GuildInviteDelete Declaration public string[] GuildInviteDelete Field Value Type Description System.String [] | Improve this Doc View Source GuildMemberJoin Declaration public string[] GuildMemberJoin Field Value Type Description System.String [] | Improve this Doc View Source GuildMemberLeft Declaration public string[] GuildMemberLeft Field Value Type Description System.String [] | Improve this Doc View Source Initilization Fire when bot is initialized Declaration public string[] Initilization Field Value Type Description System.String [] | Improve this Doc View Source MemberJoinedGuild Declaration public string[] MemberJoinedGuild Field Value Type Description System.String [] | Improve this Doc View Source MemberLeftGuild Declaration public string[] MemberLeftGuild Field Value Type Description System.String [] | Improve this Doc View Source Shutdown Fire before shutdown the bot Declaration public string[] Shutdown Field Value Type Description System.String [] | Improve this Doc View Source Update Fire each update tick Declaration public string[] Update Field Value Type Description System.String [] | Improve this Doc View Source VoiceStateChanged Declaration public string[] VoiceStateChanged Field Value Type Description System.String []"
  },
  "api/August.Struct.GatewayIntent.html": {
    "href": "api/August.Struct.GatewayIntent.html",
    "title": "Struct GatewayIntent | ACME Documentation",
    "keywords": "Struct GatewayIntent Discord bot intent setting Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : August.Struct Assembly : AugustCore.dll Syntax [Serializable] public struct GatewayIntent Fields | Improve this Doc View Source All Declaration public bool All Field Value Type Description System.Boolean | Improve this Doc View Source AllUnprivileged Declaration public bool AllUnprivileged Field Value Type Description System.Boolean | Improve this Doc View Source DirectMessageReactions Declaration public bool DirectMessageReactions Field Value Type Description System.Boolean | Improve this Doc View Source DirectMessages Declaration public bool DirectMessages Field Value Type Description System.Boolean | Improve this Doc View Source DirectMessageTyping Declaration public bool DirectMessageTyping Field Value Type Description System.Boolean | Improve this Doc View Source GuildBans Declaration public bool GuildBans Field Value Type Description System.Boolean | Improve this Doc View Source GuildEmojis Declaration public bool GuildEmojis Field Value Type Description System.Boolean | Improve this Doc View Source GuildIntegrations Declaration public bool GuildIntegrations Field Value Type Description System.Boolean | Improve this Doc View Source GuildInvites Declaration public bool GuildInvites Field Value Type Description System.Boolean | Improve this Doc View Source GuildMembers Declaration public bool GuildMembers Field Value Type Description System.Boolean | Improve this Doc View Source GuildMessageReactions Declaration public bool GuildMessageReactions Field Value Type Description System.Boolean | Improve this Doc View Source GuildMessages Declaration public bool GuildMessages Field Value Type Description System.Boolean | Improve this Doc View Source GuildMessageTyping Declaration public bool GuildMessageTyping Field Value Type Description System.Boolean | Improve this Doc View Source GuildPresences Declaration public bool GuildPresences Field Value Type Description System.Boolean | Improve this Doc View Source Guilds Declaration public bool Guilds Field Value Type Description System.Boolean | Improve this Doc View Source GuildScheduledEvents Declaration public bool GuildScheduledEvents Field Value Type Description System.Boolean | Improve this Doc View Source GuildVoiceStates Declaration public bool GuildVoiceStates Field Value Type Description System.Boolean | Improve this Doc View Source GuildWebhooks Declaration public bool GuildWebhooks Field Value Type Description System.Boolean Properties | Improve this Doc View Source Default Declaration public static readonly GatewayIntent Default { get; } Property Value Type Description GatewayIntent Methods | Improve this Doc View Source GetFlag() Declaration public int GetFlag() Returns Type Description System.Int32"
  },
  "api/August.Struct.html": {
    "href": "api/August.Struct.html",
    "title": "Namespace August.Struct | ACME Documentation",
    "keywords": "Namespace August.Struct Classes BotSettings Bot setting collection Structs BotSetting Bot profile setting The most important file ExecutionSetting Pair the discord events to framework commands GatewayIntent Discord bot intent setting ModuleHeader Module header will help framework to identify target module"
  },
  "api/August.Struct.ModuleHeader.html": {
    "href": "api/August.Struct.ModuleHeader.html",
    "title": "Struct ModuleHeader | ACME Documentation",
    "keywords": "Struct ModuleHeader Module header will help framework to identify target module Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : August.Struct Assembly : AugustCore.dll Syntax [Serializable] public struct ModuleHeader Fields | Improve this Doc View Source m_CommandPrefix Command of the module Declaration public string m_CommandPrefix Field Value Type Description System.String | Improve this Doc View Source m_ModuleDescription Description of the module Declaration public string m_ModuleDescription Field Value Type Description System.String | Improve this Doc View Source m_ModuleName Name of the module Declaration public string m_ModuleName Field Value Type Description System.String | Improve this Doc View Source m_VersionDetail Detail version Declaration public string m_VersionDetail Field Value Type Description System.String | Improve this Doc View Source m_VersionMajor Major version Declaration public int m_VersionMajor Field Value Type Description System.Int32 | Improve this Doc View Source m_VersionMinor Minor version Declaration public int m_VersionMinor Field Value Type Description System.Int32 Properties | Improve this Doc View Source Version The version string Declaration public readonly string Version { get; } Property Value Type Description System.String"
  },
  "api/August.TextFileReader.html": {
    "href": "api/August.TextFileReader.html",
    "title": "Class TextFileReader | ACME Documentation",
    "keywords": "Class TextFileReader Create a .txt reader for module The data will update when file system changed is made. The subclass must have attribute FrameworkFilePathAttribute to mark the file path. Inheritance System.Object TextFileReader Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : August Assembly : AugustCore.dll Syntax public abstract class TextFileReader Examples [FrameworkFilePathAttribute(\"FileName\", FileType.Data)] public TextIO : TextFileReader { public static TextIO controller; public TextIO() { controller = this; } public override string DefaultData() => \"Default text\"; } Constructors | Improve this Doc View Source TextFileReader() Initiaization for the text reader It will vailated to class and set the use properties. Declaration public TextFileReader() Properties | Improve this Doc View Source data Properties of the actual string data Declaration public string data { get; set; } Property Value Type Description System.String | Improve this Doc View Source path Bot folder relative path to .txt file. Declaration public string path { get; protected set; } Property Value Type Description System.String | Improve this Doc View Source vaild Check is this component is vaild Declaration public bool vaild { get; protected set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source DefaultData() Default string data Declaration public abstract string DefaultData() Returns Type Description System.String | Improve this Doc View Source Load() Load data from target .txt file Declaration public string Load() Returns Type Description System.String | Improve this Doc View Source LoadData() Load data from target .txt file to data properties If file does not exist, it will take default data to create one Declaration public void LoadData() | Improve this Doc View Source Save() Save current stored string Declaration public void Save() | Improve this Doc View Source SaveData(String) Set input string to current data and save it Declaration public void SaveData(string t) Parameters Type Name Description System.String t Input data"
  },
  "articles/Advanced.html": {
    "href": "articles/Advanced.html",
    "title": "Rigidum iuvenis referat iamque Maera habebat quid | ACME Documentation",
    "keywords": "Rigidum iuvenis referat iamque Maera habebat quid Rotatis corpora aliquid regnum et sequerer Lorem markdownum in interea, in angues ausa facit solita . Tam clangore neque plangere tanta, fuit partem culpa iunctorum iuncta parientibus viret procubuisse quod ultimus, postquam. Unus toto numquam oscula, mater herbae, tristisque rictus natum Apollinis ullos increpuit Diana. Ut tamen vos, in videtur semper cum contentus fagus. Serta fovesque augusta terra vela: inter quam supplex, et. Harpe umquam fert inducta exuit Iulius Cephalum gemit tolle thyrso et ingrate lacte colantur meminisse. Macies meminitque illi; esse ante fortissime ignes, si. Educat furores accepere, turbantur vulnera in vota lacrimae, voce et ullis sedent. Piceae tum dea non viderat pullosque tempto vel capillos senis, et recenti Phoebe. Et Amuli de victos thalami, pavet usus auro est sua. Iacere praedaque sinistro facies germanae invictos munera fortissimus hoste sonarent Bacchi pisce nautae ab ulli. Corporibus nodus undas, more, sonant in retro vina remittat illa tum; hic. Cantusque laetus Et ille. Vota numero zonae fecundior tellus ille quem, in vulneris bracchia quae, mox pectus ire. Ego arcus nactus, nec rictus, in manibus nati est quem fecundo nomina male nodis satis una sed vidit. Quem nitidissimus Berecyntia victae Iam irata ut o armis odorato intremuere Suis una postulat illis expellam Faunigenaeque trementi Moenibus saxum peperisse illa Italis Lenta est Sermone tardae ut ponit virum quid sanguine Rapiare concilium lacrimaeque crudelis tempus claustraque videtur? In et mira sperato placuere sinisterior regis profundum dixit aemula! Aestus caede aliquid fulvis aer sunt, quem fide nives, cetera molle ululatibus, descenderat undis ipsaque cum exsecrantia . Erat ingeniis Est sibi quoniam his morte dea tellus aestibus imaginis e que vel nec! Verentur amomo. Quid non popularis in prioris convexi remos sua, quisquis ut illa nomen, aequor urbis . Frondescere fata excutiuntque Hylonome matrem! var error = whitelist; username.dos = web.eup_restore.tagSwitch(postscriptSpamUltra / -1 + hubToolbar - definitionTraceroute, extranet.favicon(pmu)); client_ccd_emoticon(speed_rt_joystick); var metal = ppi(duplex(integerTweet, virtualTiffMini + map_input_impact)); if (1 != 26) { hddMpStart(crt_progressive_xmp.touchscreen_processor_hard.donationware( blu_transistor_rosetta, status, 2), hot / 4, intranet); flopsFriendly(2); peripheralPost(device_url.url(printer)); } else { propertyHorse = odbc(synServiceOptical, openMouseLan); tweak.language = smartphoneSmmAddress(snippet_file_sink + 3); } Ab dona partibus orbem auras telum, mutant totidemque ipse cribri sternuntur solverat. Quoque sonuere ne iniuria carpere. Draconum leporem. Sed mixta conscia nisi lupi auxilio. Litora iuventus annis."
  },
  "articles/BuildIn.html": {
    "href": "articles/BuildIn.html",
    "title": "| ACME Documentation",
    "keywords": ""
  },
  "articles/Guide.html": {
    "href": "articles/Guide.html",
    "title": "August Guide | ACME Documentation",
    "keywords": "August Guide Rotatis corpora aliquid regnum et sequerer Lorem markdownum in interea, in angues ausa facit solita . Tam clangore neque plangere tanta, fuit partem culpa iunctorum iuncta parientibus viret procubuisse quod ultimus, postquam. Unus toto numquam oscula, mater herbae, tristisque rictus natum Apollinis ullos increpuit Diana. Ut tamen vos, in videtur semper cum contentus fagus. Serta fovesque augusta terra vela: inter quam supplex, et. Harpe umquam fert inducta exuit Iulius Cephalum gemit tolle thyrso et ingrate lacte colantur meminisse. Macies meminitque illi; esse ante fortissime ignes, si. Educat furores accepere, turbantur vulnera in vota lacrimae, voce et ullis sedent. Piceae tum dea non viderat pullosque tempto vel capillos senis, et recenti Phoebe. Et Amuli de victos thalami, pavet usus auro est sua. Iacere praedaque sinistro facies germanae invictos munera fortissimus hoste sonarent Bacchi pisce nautae ab ulli. Corporibus nodus undas, more, sonant in retro vina remittat illa tum; hic. Cantusque laetus Et ille. Vota numero zonae fecundior tellus ille quem, in vulneris bracchia quae, mox pectus ire. Ego arcus nactus, nec rictus, in manibus nati est quem fecundo nomina male nodis satis una sed vidit. Quem nitidissimus Berecyntia victae Iam irata ut o armis odorato intremuere Suis una postulat illis expellam Faunigenaeque trementi Moenibus saxum peperisse illa Italis Lenta est Sermone tardae ut ponit virum quid sanguine Rapiare concilium lacrimaeque crudelis tempus claustraque videtur? In et mira sperato placuere sinisterior regis profundum dixit aemula! Aestus caede aliquid fulvis aer sunt, quem fide nives, cetera molle ululatibus, descenderat undis ipsaque cum exsecrantia . Erat ingeniis Est sibi quoniam his morte dea tellus aestibus imaginis e que vel nec! Verentur amomo. Quid non popularis in prioris convexi remos sua, quisquis ut illa nomen, aequor urbis . Frondescere fata excutiuntque Hylonome matrem! var error = whitelist; username.dos = web.eup_restore.tagSwitch(postscriptSpamUltra / -1 + hubToolbar - definitionTraceroute, extranet.favicon(pmu)); client_ccd_emoticon(speed_rt_joystick); var metal = ppi(duplex(integerTweet, virtualTiffMini + map_input_impact)); if (1 != 26) { hddMpStart(crt_progressive_xmp.touchscreen_processor_hard.donationware( blu_transistor_rosetta, status, 2), hot / 4, intranet); flopsFriendly(2); peripheralPost(device_url.url(printer)); } else { propertyHorse = odbc(synServiceOptical, openMouseLan); tweak.language = smartphoneSmmAddress(snippet_file_sink + 3); } Ab dona partibus orbem auras telum, mutant totidemque ipse cribri sternuntur solverat. Quoque sonuere ne iniuria carpere. Draconum leporem. Sed mixta conscia nisi lupi auxilio. Litora iuventus annis."
  },
  "articles/Guide/Config.html": {
    "href": "articles/Guide/Config.html",
    "title": "| ACME Documentation",
    "keywords": ""
  },
  "articles/Guide/CreateBot.html": {
    "href": "articles/Guide/CreateBot.html",
    "title": "Create Bot profile | ACME Documentation",
    "keywords": "Create Bot profile In order to use August, you must create one bot profile first. To generate your bot profile go to Discord_Developer The official discord document has detail tutorial, it guides your through the bot creating process. Tutorail_By_Discord After generate your bot profile Went back to your August application Let's open the app/bots/[YourBotName]/setting.json And enter the most important data first Name Bot name, will effect console output message Token Paste your bot token you just gather from discord After modified the setting.json, Let's start the framework again ! Nice ! Now we have a working bot right now, We can start adding modules to increase the features."
  },
  "articles/Guide/ImportMod.html": {
    "href": "articles/Guide/ImportMod.html",
    "title": "| ACME Documentation",
    "keywords": ""
  },
  "articles/Guide/Installation.html": {
    "href": "articles/Guide/Installation.html",
    "title": "Guide to install August | ACME Documentation",
    "keywords": "Guide to install August First, go to the our github release page down the latest framework. Latest Release Once you finished download, unzip them, inner file structure should looks like this App publish start_server.bat Note start_server.bat Is how you start the framework Caution publish folder contain all the framework files, don't modify it unless you know what you're doing. Double click start_server.bat, it should give you an error message Note It is normal to have error message at first run. Because framework cannot detect working directoy, it will create one for you. It should generate two folder for you Now your file structure should looks like this App publish start_server.bat bots mods bots folder is where your bot profile stored, mods folder is where your modules stored. Now let's create an bot folder in bots folder And name it your bot name After that your file structure should looks like this App publish start_server.bat bots [CustomBotName] mods Run the start_server.bat again and you can see Note It is normal to have error message at second run as well. Because you didn't setup the bot profile yet, so it cannot connect successfully to discord server."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "August Discord Bot Builder Framework | ACME Documentation",
    "keywords": "August Discord Bot Builder Framework What is August ? August is a easy use discord bot framework, Traditionally if we want a bot to manage our discord server. if we have a little bit of coding skill, we will make one from the bottom top. Another solution is download already made bot in github and setup by youself, and for the people who don't know about coding, they might just use existing public bot for manage their discord server. The downside of this options is we have little control of what features the bot provide, so we end up stacking bunch of discord bot in our discord channel. The command system is messy, and because they're develop by different people, the format and the way we interact with is also different. this leads to headache. Why use August ? The August provides a easy way to let everyone including people who's not familiar with coding can setup their own bot with custom features. How did we achieve this ? By modularizing the discord bot features. This means user can simply download the mod, put them in a folder then run the framework. It is simple as that. Each custom modules can also provide config files to let user fully control the feature, Like the how the bot reply, how the message is looks like etc. Come to use it, what are you waiting for !! Installation"
  },
  "index.html": {
    "href": "index.html",
    "title": "DiscordFX | ACME Documentation",
    "keywords": "DiscordFX DocFX template to create documentation similar to Discord Installation Download the source or the zipped file from the releases page . In your DocFX project folder, create a new directory named templates , if it doesn't already exist. Copy the discordfx folder from this repository into your templates folder. In your docfx.json configuration file, add templates/discordfx path into build.template property { \"build\": { \"template\": [\"default\", \"templates/discordfx\"] } } Customization Colors You can change any color which are used by the template. They are defined in the styles/colors.css file. To change it, just override the value in your own styles/main.css file for example. Disclaimer Notice of Non-Affiliation and Disclaimer We are not affiliated, associated, authorized, endorsed by, or in any way officially connected with Discord, or any of its subsidiaries, partners or its affiliates. The official Discord website can be found at https://discord.com/ . \"Discord\", Discord logos, and other Discord trademarks are trademarks or registered trademarks of Discord or its affiliates in the U.S. and elsewhere."
  }
}