{
  "api/August.AugustAction.html": {
    "href": "api/August.AugustAction.html",
    "title": "Class AugustAction | ACME Documentation",
    "keywords": "Class AugustAction Inheritance System.Object AugustAction Namespace : August Assembly : AugustCore.dll Syntax public sealed class AugustAction : IDisposable Constructors | Improve this Doc View Source AugustAction(Object, MethodInfo) Declaration public AugustAction(object host, MethodInfo info) Parameters Type Name Description System.Object host System.Reflection.MethodInfo info Properties | Improve this Doc View Source Vaild Declaration public bool Vaild { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Invoke(Object[]) Declaration public void Invoke(params object[] arguments) Parameters Type Name Description System.Object [] arguments"
  },
  "api/August.AugustFunc.html": {
    "href": "api/August.AugustFunc.html",
    "title": "Class AugustFunc | ACME Documentation",
    "keywords": "Class AugustFunc Inheritance System.Object AugustFunc Namespace : August Assembly : AugustCore.dll Syntax public sealed class AugustFunc : IDisposable Constructors | Improve this Doc View Source AugustFunc(Object, MethodInfo) Declaration public AugustFunc(object host, MethodInfo info) Parameters Type Name Description System.Object host System.Reflection.MethodInfo info Properties | Improve this Doc View Source Vaild Declaration public bool Vaild { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Invoke(Object[]) Declaration public object Invoke(params object[] arguments) Parameters Type Name Description System.Object [] arguments Returns Type Description System.Object"
  },
  "api/August.ButtonDataResult.html": {
    "href": "api/August.ButtonDataResult.html",
    "title": "Class ButtonDataResult | ACME Documentation",
    "keywords": "Class ButtonDataResult Inheritance System.Object ButtonDataResult Namespace : August Assembly : AugustCore.dll Syntax [Serializable] public class ButtonDataResult Fields | Improve this Doc View Source data Declaration public ComponentData data Field Value Type Description ComponentData | Improve this Doc View Source interaction Interaction context Declaration public SocketInteraction interaction Field Value Type Description Discord.WebSocket.SocketInteraction"
  },
  "api/August.ButtonInteractionAttribute.html": {
    "href": "api/August.ButtonInteractionAttribute.html",
    "title": "Class ButtonInteractionAttribute | ACME Documentation",
    "keywords": "Class ButtonInteractionAttribute Inheritance System.Object System.Attribute ButtonInteractionAttribute Namespace : August Assembly : AugustCore.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class ButtonInteractionAttribute : Attribute Constructors | Improve this Doc View Source ButtonInteractionAttribute(String) Declaration public ButtonInteractionAttribute(string id) Parameters Type Name Description System.String id Properties | Improve this Doc View Source CustomId Declaration public string CustomId { get; set; } Property Value Type Description System.String"
  },
  "api/August.ComponentData.html": {
    "href": "api/August.ComponentData.html",
    "title": "Class ComponentData | ACME Documentation",
    "keywords": "Class ComponentData Modal component result data structure Inheritance System.Object ComponentData Namespace : August Assembly : AugustCore.dll Syntax [Serializable] public class ComponentData Fields | Improve this Doc View Source CustomId Component ID Declaration public string CustomId Field Value Type Description System.String | Improve this Doc View Source Type Type of component Declaration public ComponentType Type Field Value Type Description Discord.ComponentType | Improve this Doc View Source Value Primary result data Declaration public string Value Field Value Type Description System.String | Improve this Doc View Source Values Multiple values result data Declaration public IReadOnlyCollection<string> Values Field Value Type Description System.Collections.Generic.IReadOnlyCollection < System.String >"
  },
  "api/August.CustomModule.html": {
    "href": "api/August.CustomModule.html",
    "title": "Class CustomModule | ACME Documentation",
    "keywords": "Class CustomModule The header of the module The module must at least one class inherit this in order to let framework identify. Inheritance System.Object CustomModule Implements ICustomModule ICustomModuleEvent Namespace : August Assembly : AugustCore.dll Syntax public abstract class CustomModule : ICustomModule, ICustomModuleEvent Properties | Improve this Doc View Source BotRootPath Bot prefix path Declaration protected string BotRootPath { get; } Property Value Type Description System.String | Improve this Doc View Source ConfigPath Bot config path Declaration protected string ConfigPath { get; } Property Value Type Description System.String | Improve this Doc View Source DataPath Bot data path Declaration protected string DataPath { get; } Property Value Type Description System.String | Improve this Doc View Source frameworkContext Framework context Primary communication method with framework Declaration public FrameworkContext frameworkContext { get; } Property Value Type Description FrameworkContext | Improve this Doc View Source Info Declaration public abstract ModuleHeader Info { get; } Property Value Type Description ModuleHeader Methods | Improve this Doc View Source Exit() Declaration public virtual Task Exit() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Initialize() Declaration public virtual Task Initialize() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ModuleLoaded() Declaration public virtual Task ModuleLoaded() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ModuleUnloading() Declaration public virtual Task ModuleUnloading() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Start() Declaration public virtual Task Start() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Update() Declaration public virtual Task Update() Returns Type Description System.Threading.Tasks.Task Implements ICustomModule ICustomModuleEvent"
  },
  "api/August.CustomModuleCommand.html": {
    "href": "api/August.CustomModuleCommand.html",
    "title": "Class CustomModuleCommand | ACME Documentation",
    "keywords": "Class CustomModuleCommand Inheritance System.Object Discord.Commands.ModuleBase < Discord.Commands.SocketCommandContext > CustomModuleCommand Implements Discord.Commands.IModuleBase ICustomModuleEvent Inherited Members Discord.Commands.ModuleBase<Discord.Commands.SocketCommandContext>.ReplyAsync(System.String, System.Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[]) Discord.Commands.ModuleBase<Discord.Commands.SocketCommandContext>.BeforeExecute(Discord.Commands.CommandInfo) Discord.Commands.ModuleBase<Discord.Commands.SocketCommandContext>.AfterExecute(Discord.Commands.CommandInfo) Discord.Commands.ModuleBase<Discord.Commands.SocketCommandContext>.OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder) Discord.Commands.ModuleBase<Discord.Commands.SocketCommandContext>.Discord.Commands.IModuleBase.SetContext(Discord.Commands.ICommandContext) Discord.Commands.ModuleBase<Discord.Commands.SocketCommandContext>.Discord.Commands.IModuleBase.BeforeExecute(Discord.Commands.CommandInfo) Discord.Commands.ModuleBase<Discord.Commands.SocketCommandContext>.Discord.Commands.IModuleBase.AfterExecute(Discord.Commands.CommandInfo) Discord.Commands.ModuleBase<Discord.Commands.SocketCommandContext>.Discord.Commands.IModuleBase.OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder) Discord.Commands.ModuleBase<Discord.Commands.SocketCommandContext>.Context Namespace : August Assembly : AugustCore.dll Syntax public abstract class CustomModuleCommand : ModuleBase<SocketCommandContext>, IModuleBase, ICustomModuleEvent Properties | Improve this Doc View Source frameworkContext Framework context Primary communication method with framework Declaration public FrameworkContext frameworkContext { get; } Property Value Type Description FrameworkContext Methods | Improve this Doc View Source Exit() Declaration public virtual Task Exit() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Initialize() Declaration public virtual Task Initialize() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ModuleLoaded() Declaration public virtual Task ModuleLoaded() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ModuleUnloading() Declaration public virtual Task ModuleUnloading() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Start() Declaration public virtual Task Start() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Update() Declaration public virtual Task Update() Returns Type Description System.Threading.Tasks.Task Implements Discord.Commands.IModuleBase ICustomModuleEvent"
  },
  "api/August.CustomModuleComponent.html": {
    "href": "api/August.CustomModuleComponent.html",
    "title": "Class CustomModuleComponent | ACME Documentation",
    "keywords": "Class CustomModuleComponent Inheritance System.Object CustomModuleComponent Implements ICustomModuleEvent Namespace : August Assembly : AugustCore.dll Syntax public abstract class CustomModuleComponent : ICustomModuleEvent Properties | Improve this Doc View Source frameworkContext Framework context Primary communication method with framework Declaration public FrameworkContext frameworkContext { get; } Property Value Type Description FrameworkContext Methods | Improve this Doc View Source Exit() Declaration public virtual Task Exit() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Initialize() Declaration public virtual Task Initialize() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ModuleLoaded() Declaration public virtual Task ModuleLoaded() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ModuleUnloading() Declaration public virtual Task ModuleUnloading() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Start() Declaration public virtual Task Start() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Update() Declaration public virtual Task Update() Returns Type Description System.Threading.Tasks.Task Implements ICustomModuleEvent"
  },
  "api/August.CustomModuleInteraction.html": {
    "href": "api/August.CustomModuleInteraction.html",
    "title": "Class CustomModuleInteraction | ACME Documentation",
    "keywords": "Class CustomModuleInteraction Inheritance System.Object Discord.Interactions.InteractionModuleBase < Discord.Interactions.SocketInteractionContext > CustomModuleInteraction Implements Discord.Interactions.IInteractionModuleBase Inherited Members Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.AfterExecute(Discord.Interactions.ICommandInfo) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.BeforeExecute(Discord.Interactions.ICommandInfo) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.BeforeExecuteAsync(Discord.Interactions.ICommandInfo) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.AfterExecuteAsync(Discord.Interactions.ICommandInfo) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.OnModuleBuilding(Discord.Interactions.InteractionService, Discord.Interactions.ModuleInfo) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.Construct(Discord.Interactions.Builders.ModuleBuilder, Discord.Interactions.InteractionService) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.DeferAsync(System.Boolean, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondAsync(System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithFileAsync(System.IO.Stream, System.String, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithFileAsync(System.String, System.String, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithFileAsync(Discord.FileAttachment, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithFilesAsync(System.Collections.Generic.IEnumerable<Discord.FileAttachment>, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.FollowupAsync(System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.FollowupWithFileAsync(System.IO.Stream, System.String, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.FollowupWithFileAsync(System.String, System.String, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.FollowupWithFileAsync(Discord.FileAttachment, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable<Discord.FileAttachment>, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.ReplyAsync(System.String, System.Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.GetOriginalResponseAsync(Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.ModifyOriginalResponseAsync(System.Action<Discord.MessageProperties>, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.DeleteOriginalResponseAsync() Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithModalAsync(Discord.Modal, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithModalAsync<TModal>(System.String, Discord.RequestOptions) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.Discord.Interactions.IInteractionModuleBase.SetContext(Discord.IInteractionContext) Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.Context Namespace : August Assembly : AugustCore.dll Syntax public abstract class CustomModuleInteraction : InteractionModuleBase<SocketInteractionContext>, IInteractionModuleBase Properties | Improve this Doc View Source frameworkContext Framework context Primary communication method with framework Declaration public FrameworkContext frameworkContext { get; } Property Value Type Description FrameworkContext Implements Discord.Interactions.IInteractionModuleBase"
  },
  "api/August.Debug.html": {
    "href": "api/August.Debug.html",
    "title": "Class Debug | ACME Documentation",
    "keywords": "Class Debug Global debug message handler Inheritance System.Object Debug Namespace : August Assembly : AugustCore.dll Syntax public static class Debug Examples Debug.Log(\"System\", \"Output message\", ConsoleColor.White); Methods | Improve this Doc View Source AddILog(IDebug) Adding new logger Declaration public static void AddILog(IDebug i) Parameters Type Name Description IDebug i Target logger | Improve this Doc View Source ErrorLog(String, Object) Universal message error print Declaration public static void ErrorLog(string tag, object message) Parameters Type Name Description System.String tag Prefix System.Object message Message | Improve this Doc View Source Log(String, Object) Universal message print Declaration public static void Log(string tag, object message) Parameters Type Name Description System.String tag Prefix System.Object message Message | Improve this Doc View Source Log(String, Object, ConsoleColor) Universal message print Declaration public static void Log(string tag, object message, ConsoleColor color) Parameters Type Name Description System.String tag Prefix System.Object message Message System.ConsoleColor color Console Color | Improve this Doc View Source RemoveILog(IDebug) Removing logger Declaration public static void RemoveILog(IDebug i) Parameters Type Name Description IDebug i Target logger | Improve this Doc View Source WarningLog(String, Object) Universal message warning print Declaration public static void WarningLog(string tag, object message) Parameters Type Name Description System.String tag Prefix System.Object message Message"
  },
  "api/August.FileController-1.html": {
    "href": "api/August.FileController-1.html",
    "title": "Class FileController<T> | ACME Documentation",
    "keywords": "Class FileController<T> Create a controller for module data type The data will update when file system changed is made. The subclass must have attribute FrameworkFilePathAttribute to mark the file path FrameworkFileFormatAttribute is optional for specified format Inheritance System.Object FileControllerBase FileController<T> Implements ICustomModuleEvent IController Inherited Members FileControllerBase.frameworkContext FileControllerBase.type FileControllerBase.format FileControllerBase.path FileControllerBase.vaild FileControllerBase.Initialize() FileControllerBase.Start() FileControllerBase.Update() FileControllerBase.ModuleLoaded() FileControllerBase.ModuleUnloading() FileControllerBase.Exit() Namespace : August Assembly : AugustCore.dll Syntax public abstract class FileController<T> : FileControllerBase, ICustomModuleEvent, IController Type Parameters Name Description T Data type Examples [FrameworkFilePathAttribute(\"FileName\", FileType.Data)] public NewDataController : FileController <NewData> { public static NewDataController controller; public NewDataController() { controller = this; } public override object DefaultData() => new NewData(); } public class NewData { public int value; } Constructors | Improve this Doc View Source FileController() Initiaization for the controller It will vailated to class and set the use properties. Declaration public FileController() Properties | Improve this Doc View Source data Actual data Declaration public T data { get; set; } Property Value Type Description T Methods | Improve this Doc View Source DefaultData() Default data Declaration public override object DefaultData() Returns Type Description System.Object Overrides FileControllerBase.DefaultData() | Improve this Doc View Source Load() Declaration public override object Load() Returns Type Description System.Object Overrides FileControllerBase.Load() | Improve this Doc View Source LoadData() Declaration public override void LoadData() Overrides FileControllerBase.LoadData() | Improve this Doc View Source Save() Declaration public override void Save() Overrides FileControllerBase.Save() | Improve this Doc View Source SaveData(T) Declaration public void SaveData(T t) Parameters Type Name Description T t | Improve this Doc View Source SaveData(Object) Declaration public override void SaveData(object data) Parameters Type Name Description System.Object data Overrides FileControllerBase.SaveData(Object) Implements ICustomModuleEvent IController"
  },
  "api/August.FileControllerBase.html": {
    "href": "api/August.FileControllerBase.html",
    "title": "Class FileControllerBase | ACME Documentation",
    "keywords": "Class FileControllerBase The base class of data controller Contain basic functionality and properties for the controller Inheritance System.Object FileControllerBase FileController<T> Implements ICustomModuleEvent IController Namespace : August Assembly : AugustCore.dll Syntax public abstract class FileControllerBase : ICustomModuleEvent, IController Properties | Improve this Doc View Source format Format of the data Declaration public FileFormat format { get; protected set; } Property Value Type Description FileFormat | Improve this Doc View Source frameworkContext Framework context Primary communication method with framework Declaration public FrameworkContext frameworkContext { get; } Property Value Type Description FrameworkContext | Improve this Doc View Source path Bot folder relative path to file. Declaration public string path { get; protected set; } Property Value Type Description System.String | Improve this Doc View Source type Type of the data Declaration public FileType type { get; protected set; } Property Value Type Description FileType | Improve this Doc View Source vaild Check is this component is vaild Declaration public bool vaild { get; protected set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source DefaultData() Default data Declaration public abstract object DefaultData() Returns Type Description System.Object | Improve this Doc View Source Exit() Declaration public virtual Task Exit() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Initialize() Declaration public virtual Task Initialize() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Load() Declaration public virtual object Load() Returns Type Description System.Object | Improve this Doc View Source LoadData() Declaration public virtual void LoadData() | Improve this Doc View Source ModuleLoaded() Declaration public virtual Task ModuleLoaded() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ModuleUnloading() Declaration public virtual Task ModuleUnloading() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Save() Declaration public virtual void Save() | Improve this Doc View Source SaveData(Object) Declaration public virtual void SaveData(object data) Parameters Type Name Description System.Object data | Improve this Doc View Source Start() Declaration public virtual Task Start() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Update() Declaration public virtual Task Update() Returns Type Description System.Threading.Tasks.Task Implements ICustomModuleEvent IController"
  },
  "api/August.FileFormat.html": {
    "href": "api/August.FileFormat.html",
    "title": "Enum FileFormat | ACME Documentation",
    "keywords": "Enum FileFormat Save format It will effect save data structure Namespace : August Assembly : AugustCore.dll Syntax public enum FileFormat Fields Name Description Binary Bson Json"
  },
  "api/August.FileType.html": {
    "href": "api/August.FileType.html",
    "title": "Enum FileType | ACME Documentation",
    "keywords": "Enum FileType Save type It will effect save frequency Namespace : August Assembly : AugustCore.dll Syntax public enum FileType Fields Name Description Config Only update to drive by menually call the save/load method Data When background counter to zero and user has update the data then it will automatically call the store method ImportantData Each update will automatically call the store method"
  },
  "api/August.FrameworkCommandAttribute.html": {
    "href": "api/August.FrameworkCommandAttribute.html",
    "title": "Class FrameworkCommandAttribute | ACME Documentation",
    "keywords": "Class FrameworkCommandAttribute Inheritance System.Object System.Attribute FrameworkCommandAttribute Namespace : August Assembly : AugustCore.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class FrameworkCommandAttribute : Attribute Constructors | Improve this Doc View Source FrameworkCommandAttribute(String) Declaration public FrameworkCommandAttribute(string name) Parameters Type Name Description System.String name Properties | Improve this Doc View Source name Declaration public string name { get; set; } Property Value Type Description System.String"
  },
  "api/August.FrameworkCommandPermission.html": {
    "href": "api/August.FrameworkCommandPermission.html",
    "title": "Enum FrameworkCommandPermission | ACME Documentation",
    "keywords": "Enum FrameworkCommandPermission This will define the accessibility for the command Namespace : August Assembly : AugustCore.dll Syntax public enum FrameworkCommandPermission Fields Name Description Private Can only be call by self Protected Can only be call by other modules, not expose by user interface Public Open for all"
  },
  "api/August.FrameworkContext.html": {
    "href": "api/August.FrameworkContext.html",
    "title": "Class FrameworkContext | ACME Documentation",
    "keywords": "Class FrameworkContext Inheritance System.Object FrameworkContext Namespace : August Assembly : AugustCore.dll Syntax public sealed class FrameworkContext Constructors | Improve this Doc View Source FrameworkContext(Func<Type, Object>, Func<String, String, AugustAction>, Func<String, String, Type, AugustFunc>) Declaration public FrameworkContext(Func<Type, object> getClass, Func<string, string, AugustAction> getFrameworkAction, Func<string, string, Type, AugustFunc> getFrameworkFunc) Parameters Type Name Description System.Func < System.Type , System.Object > getClass System.Func < System.String , System.String , AugustAction > getFrameworkAction System.Func < System.String , System.String , System.Type , AugustFunc > getFrameworkFunc Methods | Improve this Doc View Source GetCommandAction(String, String) Declaration public AugustAction GetCommandAction(string module, string fullcommand) Parameters Type Name Description System.String module System.String fullcommand Returns Type Description AugustAction | Improve this Doc View Source GetCommandAction(String, String, String) Declaration public AugustAction GetCommandAction(string module, string group, string command) Parameters Type Name Description System.String module System.String group System.String command Returns Type Description AugustAction | Improve this Doc View Source GetCommandFunc<T>(String, String) Declaration public AugustFunc GetCommandFunc<T>(string module, string fullcommand) Parameters Type Name Description System.String module System.String fullcommand Returns Type Description AugustFunc Type Parameters Name Description T | Improve this Doc View Source GetCommandFunc<T>(String, String, String) Declaration public AugustFunc GetCommandFunc<T>(string module, string group, string command) Parameters Type Name Description System.String module System.String group System.String command Returns Type Description AugustFunc Type Parameters Name Description T | Improve this Doc View Source GetInstanceClass(Type) Get current assembly class type instance Declaration public object GetInstanceClass(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Object | Improve this Doc View Source GetInstanceClass<T>() Get current assembly class type instance Declaration public T GetInstanceClass<T>() where T : class Returns Type Description T Type Parameters Name Description T Type target | Improve this Doc View Source InvokeCommandAction(String, String, Object[]) Declaration public bool InvokeCommandAction(string module, string command, object[] arguments) Parameters Type Name Description System.String module System.String command System.Object [] arguments Returns Type Description System.Boolean | Improve this Doc View Source InvokeCommandFunc<T>(String, String, Object[], out T) Declaration public bool InvokeCommandFunc<T>(string module, string command, object[] arguments, out T result) Parameters Type Name Description System.String module System.String command System.Object [] arguments T result Returns Type Description System.Boolean Type Parameters Name Description T"
  },
  "api/August.FrameworkDescriptionAttribute.html": {
    "href": "api/August.FrameworkDescriptionAttribute.html",
    "title": "Class FrameworkDescriptionAttribute | ACME Documentation",
    "keywords": "Class FrameworkDescriptionAttribute Inheritance System.Object System.Attribute FrameworkDescriptionAttribute Namespace : August Assembly : AugustCore.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = false)] public class FrameworkDescriptionAttribute : Attribute Constructors | Improve this Doc View Source FrameworkDescriptionAttribute(String) Declaration public FrameworkDescriptionAttribute(string name) Parameters Type Name Description System.String name Properties | Improve this Doc View Source name Declaration public string name { get; set; } Property Value Type Description System.String"
  },
  "api/August.FrameworkFileFormatAttribute.html": {
    "href": "api/August.FrameworkFileFormatAttribute.html",
    "title": "Class FrameworkFileFormatAttribute | ACME Documentation",
    "keywords": "Class FrameworkFileFormatAttribute Inheritance System.Object System.Attribute FrameworkFileFormatAttribute Namespace : August Assembly : AugustCore.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, AllowMultiple = false)] public class FrameworkFileFormatAttribute : Attribute Constructors | Improve this Doc View Source FrameworkFileFormatAttribute(FileFormat) Declaration public FrameworkFileFormatAttribute(FileFormat type = FileFormat.Json) Parameters Type Name Description FileFormat type Properties | Improve this Doc View Source type Declaration public FileFormat type { get; set; } Property Value Type Description FileFormat"
  },
  "api/August.FrameworkFilePathAttribute.html": {
    "href": "api/August.FrameworkFilePathAttribute.html",
    "title": "Class FrameworkFilePathAttribute | ACME Documentation",
    "keywords": "Class FrameworkFilePathAttribute Inheritance System.Object System.Attribute FrameworkFilePathAttribute Namespace : August Assembly : AugustCore.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, AllowMultiple = false)] public class FrameworkFilePathAttribute : Attribute Constructors | Improve this Doc View Source FrameworkFilePathAttribute(String, FileType) Declaration public FrameworkFilePathAttribute(string name, FileType type = FileType.Data) Parameters Type Name Description System.String name FileType type Properties | Improve this Doc View Source name Declaration public string name { get; set; } Property Value Type Description System.String | Improve this Doc View Source type Declaration public FileType type { get; set; } Property Value Type Description FileType"
  },
  "api/August.FrameworkGroupAttribute.html": {
    "href": "api/August.FrameworkGroupAttribute.html",
    "title": "Class FrameworkGroupAttribute | ACME Documentation",
    "keywords": "Class FrameworkGroupAttribute Inheritance System.Object System.Attribute FrameworkGroupAttribute Namespace : August Assembly : AugustCore.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false)] public class FrameworkGroupAttribute : Attribute Constructors | Improve this Doc View Source FrameworkGroupAttribute(String) Declaration public FrameworkGroupAttribute(string name) Parameters Type Name Description System.String name Properties | Improve this Doc View Source name Declaration public string name { get; set; } Property Value Type Description System.String"
  },
  "api/August.GlobalPath.html": {
    "href": "api/August.GlobalPath.html",
    "title": "Class GlobalPath | ACME Documentation",
    "keywords": "Class GlobalPath Global path const Inheritance System.Object GlobalPath Namespace : August Assembly : AugustCore.dll Syntax public static class GlobalPath Fields | Improve this Doc View Source BotsConfigFolder Config folder name Declaration public const string BotsConfigFolder = \"config\" Field Value Type Description System.String | Improve this Doc View Source BotsDataFolder Data folder name Declaration public const string BotsDataFolder = \"data\" Field Value Type Description System.String | Improve this Doc View Source BotsExecuteFile Execute file name Declaration public const string BotsExecuteFile = \"execute.json\" Field Value Type Description System.String | Improve this Doc View Source BotsIntentFile Intent file name Declaration public const string BotsIntentFile = \"intent.json\" Field Value Type Description System.String | Improve this Doc View Source BotsModFolder Module folder name Declaration public const string BotsModFolder = \"mods\" Field Value Type Description System.String | Improve this Doc View Source BotsRootFolder Bot folder name Declaration public const string BotsRootFolder = \"bots\" Field Value Type Description System.String | Improve this Doc View Source BotsSettingFile Setting file name Declaration public const string BotsSettingFile = \"setting.json\" Field Value Type Description System.String | Improve this Doc View Source FrameworkProperties Framework setting file name Declaration public const string FrameworkProperties = \"properties.json\" Field Value Type Description System.String"
  },
  "api/August.html": {
    "href": "api/August.html",
    "title": "Namespace August | ACME Documentation",
    "keywords": "Namespace August Classes AugustAction AugustFunc ButtonDataResult ButtonInteractionAttribute ComponentData Modal component result data structure CustomModule The header of the module The module must at least one class inherit this in order to let framework identify. CustomModuleCommand CustomModuleComponent CustomModuleInteraction Debug Global debug message handler FileController<T> Create a controller for module data type The data will update when file system changed is made. The subclass must have attribute FrameworkFilePathAttribute to mark the file path FrameworkFileFormatAttribute is optional for specified format FileControllerBase The base class of data controller Contain basic functionality and properties for the controller FrameworkCommandAttribute FrameworkContext FrameworkDescriptionAttribute FrameworkFileFormatAttribute FrameworkFilePathAttribute FrameworkGroupAttribute GlobalPath Global path const ModalResultData Modal result data structure ModuleManager SelectMenuDataResult SelectMenuInteractionAttribute TextFileReader Create a .txt reader for module The data will update when file system changed is made. The subclass must have attribute FrameworkFilePathAttribute to mark the file path. Interfaces IController ICustomModule ICustomModuleEvent IDebug August log behaviour, Log system will print the one without using tag filter first. Enums FileFormat Save format It will effect save data structure FileType Save type It will effect save frequency FrameworkCommandPermission This will define the accessibility for the command"
  },
  "api/August.IController.html": {
    "href": "api/August.IController.html",
    "title": "Interface IController | ACME Documentation",
    "keywords": "Interface IController Namespace : August Assembly : AugustCore.dll Syntax public interface IController Properties | Improve this Doc View Source path Bot folder relative path to file. Declaration string path { get; } Property Value Type Description System.String | Improve this Doc View Source vaild Check is this component is vaild Declaration bool vaild { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Load() Load data from target file Declaration object Load() Returns Type Description System.Object | Improve this Doc View Source LoadData() Load data from target file to data properties If file does not exist, it will take default data to create one Declaration void LoadData() | Improve this Doc View Source Save() Save current stored data Declaration void Save() | Improve this Doc View Source SaveData(Object) Set input data to current data and save it Declaration void SaveData(object data) Parameters Type Name Description System.Object data Input data"
  },
  "api/August.ICustomModule.html": {
    "href": "api/August.ICustomModule.html",
    "title": "Interface ICustomModule | ACME Documentation",
    "keywords": "Interface ICustomModule Namespace : August Assembly : AugustCore.dll Syntax public interface ICustomModule Properties | Improve this Doc View Source Info Module information Declaration ModuleHeader Info { get; } Property Value Type Description ModuleHeader"
  },
  "api/August.ICustomModuleEvent.html": {
    "href": "api/August.ICustomModuleEvent.html",
    "title": "Interface ICustomModuleEvent | ACME Documentation",
    "keywords": "Interface ICustomModuleEvent Namespace : August Assembly : AugustCore.dll Syntax public interface ICustomModuleEvent Methods | Improve this Doc View Source Exit() Fire when bot is exiting Declaration Task Exit() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Initialize() Fire after modules is load Declaration Task Initialize() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ModuleLoaded() Fire when module list is update Declaration Task ModuleLoaded() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ModuleUnloading() Fire when this module is unload Declaration Task ModuleUnloading() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Start() Fire after Initialize() called and framework finish initialization Declaration Task Start() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Update() Fire each framework update tick Declaration Task Update() Returns Type Description System.Threading.Tasks.Task"
  },
  "api/August.IDebug.html": {
    "href": "api/August.IDebug.html",
    "title": "Interface IDebug | ACME Documentation",
    "keywords": "Interface IDebug August log behaviour, Log system will print the one without using tag filter first. Namespace : August Assembly : AugustCore.dll Syntax public interface IDebug Properties | Improve this Doc View Source block Block the log when tag filter regex is match This means only print once Declaration bool block { get; } Property Value Type Description System.Boolean | Improve this Doc View Source errorColor Error log color Declaration ConsoleColor errorColor { get; } Property Value Type Description System.ConsoleColor | Improve this Doc View Source logColor Normal log color Declaration ConsoleColor logColor { get; } Property Value Type Description System.ConsoleColor | Improve this Doc View Source tagFilter Filter regex, try to match with tag string with it Declaration Regex tagFilter { get; } Property Value Type Description System.Text.RegularExpressions.Regex | Improve this Doc View Source useFilter Specified log tag filter Declaration bool useFilter { get; } Property Value Type Description System.Boolean | Improve this Doc View Source warningColor Warning log color Declaration ConsoleColor warningColor { get; } Property Value Type Description System.ConsoleColor Methods | Improve this Doc View Source ErrorLog(String, Object) Universal print error message Declaration void ErrorLog(string tag, object message) Parameters Type Name Description System.String tag System.Object message | Improve this Doc View Source Log(String, Object) Universal print message Declaration void Log(string tag, object message) Parameters Type Name Description System.String tag System.Object message | Improve this Doc View Source Log(String, Object, ConsoleColor) Universal print message Declaration void Log(string tag, object message, ConsoleColor color) Parameters Type Name Description System.String tag System.Object message System.ConsoleColor color | Improve this Doc View Source WarningLog(String, Object) Universal print warning message Declaration void WarningLog(string tag, object message) Parameters Type Name Description System.String tag System.Object message"
  },
  "api/August.ModalResultData.html": {
    "href": "api/August.ModalResultData.html",
    "title": "Class ModalResultData | ACME Documentation",
    "keywords": "Class ModalResultData Modal result data structure Inheritance System.Object ModalResultData Namespace : August Assembly : AugustCore.dll Syntax [Serializable] public class ModalResultData Fields | Improve this Doc View Source interaction Interaction context Declaration public SocketInteraction interaction Field Value Type Description Discord.WebSocket.SocketInteraction | Improve this Doc View Source Results List of component data Declaration public List<ComponentData> Results Field Value Type Description System.Collections.Generic.List < ComponentData > Properties | Improve this Doc View Source Item[String] Indexing the component by customID string Declaration public ComponentData this[string index] { get; set; } Parameters Type Name Description System.String index Property Value Type Description ComponentData"
  },
  "api/August.ModuleManager.html": {
    "href": "api/August.ModuleManager.html",
    "title": "Class ModuleManager | ACME Documentation",
    "keywords": "Class ModuleManager Inheritance System.Object ModuleManager Namespace : August Assembly : AugustCore.dll Syntax public static class ModuleManager Methods | Improve this Doc View Source Add(Assembly, FrameworkContext) Declaration public static void Add(Assembly assembly, FrameworkContext context) Parameters Type Name Description System.Reflection.Assembly assembly FrameworkContext context | Improve this Doc View Source GetFrameworkContext(Assembly) Declaration public static FrameworkContext GetFrameworkContext(Assembly key) Parameters Type Name Description System.Reflection.Assembly key Returns Type Description FrameworkContext | Improve this Doc View Source Remove(Assembly) Declaration public static void Remove(Assembly assembly) Parameters Type Name Description System.Reflection.Assembly assembly"
  },
  "api/August.SelectMenuDataResult.html": {
    "href": "api/August.SelectMenuDataResult.html",
    "title": "Class SelectMenuDataResult | ACME Documentation",
    "keywords": "Class SelectMenuDataResult Inheritance System.Object SelectMenuDataResult Namespace : August Assembly : AugustCore.dll Syntax [Serializable] public class SelectMenuDataResult Fields | Improve this Doc View Source data Declaration public ComponentData data Field Value Type Description ComponentData | Improve this Doc View Source interaction Interaction context Declaration public SocketInteraction interaction Field Value Type Description Discord.WebSocket.SocketInteraction"
  },
  "api/August.SelectMenuInteractionAttribute.html": {
    "href": "api/August.SelectMenuInteractionAttribute.html",
    "title": "Class SelectMenuInteractionAttribute | ACME Documentation",
    "keywords": "Class SelectMenuInteractionAttribute Inheritance System.Object System.Attribute SelectMenuInteractionAttribute Namespace : August Assembly : AugustCore.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class SelectMenuInteractionAttribute : Attribute Constructors | Improve this Doc View Source SelectMenuInteractionAttribute(String) Declaration public SelectMenuInteractionAttribute(string id) Parameters Type Name Description System.String id Properties | Improve this Doc View Source CustomId Declaration public string CustomId { get; set; } Property Value Type Description System.String"
  },
  "api/August.Struct.BotCommandList.html": {
    "href": "api/August.Struct.BotCommandList.html",
    "title": "Struct BotCommandList | ACME Documentation",
    "keywords": "Struct BotCommandList Namespace : August.Struct Assembly : AugustConfig.dll Syntax [Serializable] public struct BotCommandList Fields | Improve this Doc View Source CommandList Declaration public ModuleCommandList[] CommandList Field Value Type Description ModuleCommandList [] | Improve this Doc View Source ModuleName Declaration public string ModuleName Field Value Type Description System.String"
  },
  "api/August.Struct.BotSetting.html": {
    "href": "api/August.Struct.BotSetting.html",
    "title": "Struct BotSetting | ACME Documentation",
    "keywords": "Struct BotSetting Bot profile setting The most important file Namespace : August.Struct Assembly : AugustConfig.dll Syntax [Serializable] public struct BotSetting Fields | Improve this Doc View Source Color Console color code, Range from 0 - 16 Reference Declaration public int Color Field Value Type Description System.Int32 | Improve this Doc View Source GatewayIntentWarning Output intent warning Declaration public bool GatewayIntentWarning Field Value Type Description System.Boolean | Improve this Doc View Source LoadMods Loading modules name, Check your mods folder The filename must contain extension Declaration public string[] LoadMods Field Value Type Description System.String [] | Improve this Doc View Source Name Bot name, will effect console output message Declaration public string Name Field Value Type Description System.String | Improve this Doc View Source Prefix Prefix for specified the command Declaration public string Prefix Field Value Type Description System.String | Improve this Doc View Source Syntax Syntax for specified the command Declaration public char Syntax Field Value Type Description System.Char | Improve this Doc View Source Token Bot Token Declaration public string Token Field Value Type Description System.String Properties | Improve this Doc View Source Default Declaration public static readonly BotSetting Default { get; } Property Value Type Description BotSetting"
  },
  "api/August.Struct.BotSettings.html": {
    "href": "api/August.Struct.BotSettings.html",
    "title": "Class BotSettings | ACME Documentation",
    "keywords": "Class BotSettings Bot setting collection Inheritance System.Object BotSettings Namespace : August.Struct Assembly : AugustConfig.dll Syntax [Serializable] public class BotSettings Fields | Improve this Doc View Source execute Execute dict for discord events to framework commands Declaration public ExecutionSetting execute Field Value Type Description ExecutionSetting | Improve this Doc View Source intent Bot intent setting Declaration public GatewayIntent intent Field Value Type Description GatewayIntent | Improve this Doc View Source prefixPath Bot prefix absolute path Declaration public string prefixPath Field Value Type Description System.String | Improve this Doc View Source setting Bot profile Declaration public BotSetting setting Field Value Type Description BotSetting"
  },
  "api/August.Struct.BotStatus.html": {
    "href": "api/August.Struct.BotStatus.html",
    "title": "Struct BotStatus | ACME Documentation",
    "keywords": "Struct BotStatus Namespace : August.Struct Assembly : AugustConfig.dll Syntax [Serializable] public struct BotStatus Fields | Improve this Doc View Source BotState Declaration public int BotState Field Value Type Description System.Int32 | Improve this Doc View Source ConnectionState Declaration public int ConnectionState Field Value Type Description System.Int32 | Improve this Doc View Source GuildIDs Declaration public string[] GuildIDs Field Value Type Description System.String [] | Improve this Doc View Source IsVaild Declaration public bool IsVaild Field Value Type Description System.Boolean | Improve this Doc View Source LoginState Declaration public int LoginState Field Value Type Description System.Int32 | Improve this Doc View Source Name Declaration public string Name Field Value Type Description System.String | Improve this Doc View Source Path Declaration public string Path Field Value Type Description System.String | Improve this Doc View Source ProfileUrl Declaration public string ProfileUrl Field Value Type Description System.String | Improve this Doc View Source UserID Declaration public string UserID Field Value Type Description System.String Operators | Improve this Doc View Source Equality(BotStatus, BotStatus) Declaration public static bool operator ==(BotStatus a, BotStatus b) Parameters Type Name Description BotStatus a BotStatus b Returns Type Description System.Boolean | Improve this Doc View Source Inequality(BotStatus, BotStatus) Declaration public static bool operator !=(BotStatus a, BotStatus b) Parameters Type Name Description BotStatus a BotStatus b Returns Type Description System.Boolean"
  },
  "api/August.Struct.ExecutionSetting.html": {
    "href": "api/August.Struct.ExecutionSetting.html",
    "title": "Struct ExecutionSetting | ACME Documentation",
    "keywords": "Struct ExecutionSetting Pair the discord events to framework commands Namespace : August.Struct Assembly : AugustConfig.dll Syntax [Serializable] public struct ExecutionSetting Fields | Improve this Doc View Source ChannelCreated Called => System.Threading.Tasks.Task ( ) Declaration public string[] ChannelCreated Field Value Type Description System.String [] | Improve this Doc View Source ChannelDestroyed Called => System.Threading.Tasks.Task ( ) Declaration public string[] ChannelDestroyed Field Value Type Description System.String [] | Improve this Doc View Source ChannelUpdated Called => System.Threading.Tasks.Task ( , ) Declaration public string[] ChannelUpdated Field Value Type Description System.String [] | Improve this Doc View Source CurrentUserUpdated Called => System.Threading.Tasks.Task ( , ) Declaration public string[] CurrentUserUpdated Field Value Type Description System.String [] | Improve this Doc View Source Exit Fire After exit event, before disposing Called => System.Threading.Tasks.Task () Declaration public string[] Exit Field Value Type Description System.String [] | Improve this Doc View Source GuildAvailable Called => System.Threading.Tasks.Task ( ) Declaration public string[] GuildAvailable Field Value Type Description System.String [] | Improve this Doc View Source GuildMembersDownloaded Called => System.Threading.Tasks.Task ( ) Declaration public string[] GuildMembersDownloaded Field Value Type Description System.String [] | Improve this Doc View Source GuildScheduledEventCancelled Called => System.Threading.Tasks.Task ( ) Declaration public string[] GuildScheduledEventCancelled Field Value Type Description System.String [] | Improve this Doc View Source GuildScheduledEventCompleted Called => System.Threading.Tasks.Task ( ) Declaration public string[] GuildScheduledEventCompleted Field Value Type Description System.String [] | Improve this Doc View Source GuildScheduledEventCreated Called => System.Threading.Tasks.Task ( ) Declaration public string[] GuildScheduledEventCreated Field Value Type Description System.String [] | Improve this Doc View Source GuildScheduledEventStarted Called => System.Threading.Tasks.Task ( ) Declaration public string[] GuildScheduledEventStarted Field Value Type Description System.String [] | Improve this Doc View Source GuildStickerCreated Called => System.Threading.Tasks.Task ( ) Declaration public string[] GuildStickerCreated Field Value Type Description System.String [] | Improve this Doc View Source GuildStickerDeleted Called => System.Threading.Tasks.Task ( ) Declaration public string[] GuildStickerDeleted Field Value Type Description System.String [] | Improve this Doc View Source GuildStickerUpdated Called => System.Threading.Tasks.Task ( , ) Declaration public string[] GuildStickerUpdated Field Value Type Description System.String [] | Improve this Doc View Source GuildUnavailable Called => System.Threading.Tasks.Task ( ) Declaration public string[] GuildUnavailable Field Value Type Description System.String [] | Improve this Doc View Source GuildUpdated Called => System.Threading.Tasks.Task ( , ) Declaration public string[] GuildUpdated Field Value Type Description System.String [] | Improve this Doc View Source Initilization Fire when bot is initialized Called => System.Threading.Tasks.Task () Declaration public string[] Initilization Field Value Type Description System.String [] | Improve this Doc View Source InviteCreated Called => System.Threading.Tasks.Task ( ) Declaration public string[] InviteCreated Field Value Type Description System.String [] | Improve this Doc View Source InviteDeleted Called => System.Threading.Tasks.Task ( , System.String ) Declaration public string[] InviteDeleted Field Value Type Description System.String [] | Improve this Doc View Source JoinedGuild Called => System.Threading.Tasks.Task ( ) Declaration public string[] JoinedGuild Field Value Type Description System.String [] | Improve this Doc View Source LeftGuild Called => System.Threading.Tasks.Task ( ) Declaration public string[] LeftGuild Field Value Type Description System.String [] | Improve this Doc View Source MessageReceived Called => System.Threading.Tasks.Task ( ) Declaration public string[] MessageReceived Field Value Type Description System.String [] | Improve this Doc View Source ModulesLoaded Fire when any module is loaded Called => System.Threading.Tasks.Task () Declaration public string[] ModulesLoaded Field Value Type Description System.String [] | Improve this Doc View Source ModulesUnLoaded Fire After any module is unloaded Called => System.Threading.Tasks.Task () Declaration public string[] ModulesUnLoaded Field Value Type Description System.String [] | Improve this Doc View Source PresenceUpdated Called => System.Threading.Tasks.Task ( , , ) Declaration public string[] PresenceUpdated Field Value Type Description System.String [] | Improve this Doc View Source RecipientAdded Called => System.Threading.Tasks.Task ( ) Declaration public string[] RecipientAdded Field Value Type Description System.String [] | Improve this Doc View Source RecipientRemoved Called => System.Threading.Tasks.Task ( ) Declaration public string[] RecipientRemoved Field Value Type Description System.String [] | Improve this Doc View Source RequestToSpeak Called => System.Threading.Tasks.Task ( , ) Declaration public string[] RequestToSpeak Field Value Type Description System.String [] | Improve this Doc View Source RoleCreated Called => System.Threading.Tasks.Task ( ) Declaration public string[] RoleCreated Field Value Type Description System.String [] | Improve this Doc View Source RoleDeleted Called => System.Threading.Tasks.Task ( ) Declaration public string[] RoleDeleted Field Value Type Description System.String [] | Improve this Doc View Source RoleUpdated Called => System.Threading.Tasks.Task ( , ) Declaration public string[] RoleUpdated Field Value Type Description System.String [] | Improve this Doc View Source Shutdown Fire before shutdown the bot Called => System.Threading.Tasks.Task () Declaration public string[] Shutdown Field Value Type Description System.String [] | Improve this Doc View Source SpeakerAdded Called => System.Threading.Tasks.Task ( , ) Declaration public string[] SpeakerAdded Field Value Type Description System.String [] | Improve this Doc View Source SpeakerRemoved Called => System.Threading.Tasks.Task ( , ) Declaration public string[] SpeakerRemoved Field Value Type Description System.String [] | Improve this Doc View Source StageEnded Called => System.Threading.Tasks.Task ( ) Declaration public string[] StageEnded Field Value Type Description System.String [] | Improve this Doc View Source StageStarted Called => System.Threading.Tasks.Task ( ) Declaration public string[] StageStarted Field Value Type Description System.String [] | Improve this Doc View Source StageUpdated Called => System.Threading.Tasks.Task ( , ) Declaration public string[] StageUpdated Field Value Type Description System.String [] | Improve this Doc View Source ThreadCreated Called => System.Threading.Tasks.Task ( ) Declaration public string[] ThreadCreated Field Value Type Description System.String [] | Improve this Doc View Source ThreadMemberJoined Called => System.Threading.Tasks.Task ( ) Declaration public string[] ThreadMemberJoined Field Value Type Description System.String [] | Improve this Doc View Source ThreadMemberLeft Called => System.Threading.Tasks.Task ( ) Declaration public string[] ThreadMemberLeft Field Value Type Description System.String [] | Improve this Doc View Source Update Fire each update tick Called => System.Threading.Tasks.Task () Declaration public string[] Update Field Value Type Description System.String [] | Improve this Doc View Source UserBanned Called => System.Threading.Tasks.Task ( , ) Declaration public string[] UserBanned Field Value Type Description System.String [] | Improve this Doc View Source UserJoined Called => System.Threading.Tasks.Task ( ) Declaration public string[] UserJoined Field Value Type Description System.String [] | Improve this Doc View Source UserLeft Called => System.Threading.Tasks.Task ( , ) Declaration public string[] UserLeft Field Value Type Description System.String [] | Improve this Doc View Source UserUnBanned Called => System.Threading.Tasks.Task ( , ) Declaration public string[] UserUnBanned Field Value Type Description System.String [] | Improve this Doc View Source UserUpdate Called => System.Threading.Tasks.Task ( , ) Declaration public string[] UserUpdate Field Value Type Description System.String [] | Improve this Doc View Source VoiceServerUpdated Called => System.Threading.Tasks.Task ( ) Declaration public string[] VoiceServerUpdated Field Value Type Description System.String []"
  },
  "api/August.Struct.GatewayIntent.html": {
    "href": "api/August.Struct.GatewayIntent.html",
    "title": "Struct GatewayIntent | ACME Documentation",
    "keywords": "Struct GatewayIntent Discord bot intent setting Namespace : August.Struct Assembly : AugustConfig.dll Syntax [Serializable] public struct GatewayIntent Fields | Improve this Doc View Source All Declaration public bool All Field Value Type Description System.Boolean | Improve this Doc View Source AllUnprivileged Declaration public bool AllUnprivileged Field Value Type Description System.Boolean | Improve this Doc View Source DirectMessageReactions Declaration public bool DirectMessageReactions Field Value Type Description System.Boolean | Improve this Doc View Source DirectMessages Declaration public bool DirectMessages Field Value Type Description System.Boolean | Improve this Doc View Source DirectMessageTyping Declaration public bool DirectMessageTyping Field Value Type Description System.Boolean | Improve this Doc View Source GuildBans Declaration public bool GuildBans Field Value Type Description System.Boolean | Improve this Doc View Source GuildEmojis Declaration public bool GuildEmojis Field Value Type Description System.Boolean | Improve this Doc View Source GuildIntegrations Declaration public bool GuildIntegrations Field Value Type Description System.Boolean | Improve this Doc View Source GuildInvites Declaration public bool GuildInvites Field Value Type Description System.Boolean | Improve this Doc View Source GuildMembers Declaration public bool GuildMembers Field Value Type Description System.Boolean | Improve this Doc View Source GuildMessageReactions Declaration public bool GuildMessageReactions Field Value Type Description System.Boolean | Improve this Doc View Source GuildMessages Declaration public bool GuildMessages Field Value Type Description System.Boolean | Improve this Doc View Source GuildMessageTyping Declaration public bool GuildMessageTyping Field Value Type Description System.Boolean | Improve this Doc View Source GuildPresences Declaration public bool GuildPresences Field Value Type Description System.Boolean | Improve this Doc View Source Guilds Declaration public bool Guilds Field Value Type Description System.Boolean | Improve this Doc View Source GuildScheduledEvents Declaration public bool GuildScheduledEvents Field Value Type Description System.Boolean | Improve this Doc View Source GuildVoiceStates Declaration public bool GuildVoiceStates Field Value Type Description System.Boolean | Improve this Doc View Source GuildWebhooks Declaration public bool GuildWebhooks Field Value Type Description System.Boolean Properties | Improve this Doc View Source Default Declaration public static readonly GatewayIntent Default { get; } Property Value Type Description GatewayIntent Extension Methods GatewayIntentExtensions.GetFlag(GatewayIntent)"
  },
  "api/August.Struct.GatewayIntentExtensions.html": {
    "href": "api/August.Struct.GatewayIntentExtensions.html",
    "title": "Class GatewayIntentExtensions | ACME Documentation",
    "keywords": "Class GatewayIntentExtensions Discord bot intent setting Inheritance System.Object GatewayIntentExtensions Namespace : August.Struct Assembly : AugustCore.dll Syntax public static class GatewayIntentExtensions Methods | Improve this Doc View Source GetFlag(GatewayIntent) Declaration public static int GetFlag(this GatewayIntent intents) Parameters Type Name Description GatewayIntent intents Returns Type Description System.Int32"
  },
  "api/August.Struct.html": {
    "href": "api/August.Struct.html",
    "title": "Namespace August.Struct | ACME Documentation",
    "keywords": "Namespace August.Struct Classes BotSettings Bot setting collection GatewayIntentExtensions Discord bot intent setting Structs BotCommandList BotSetting Bot profile setting The most important file BotStatus ExecutionSetting Pair the discord events to framework commands GatewayIntent Discord bot intent setting ModuleCommandList ModuleHeader Module header will help framework to identify target module Properties Framework properties will effect the internal mechnism"
  },
  "api/August.Struct.ModuleCommandList.html": {
    "href": "api/August.Struct.ModuleCommandList.html",
    "title": "Struct ModuleCommandList | ACME Documentation",
    "keywords": "Struct ModuleCommandList Namespace : August.Struct Assembly : AugustConfig.dll Syntax [Serializable] public struct ModuleCommandList Fields | Improve this Doc View Source ArgumentLength Declaration public int ArgumentLength Field Value Type Description System.Int32 | Improve this Doc View Source ArugmentType Declaration public string[] ArugmentType Field Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command Field Value Type Description System.String | Improve this Doc View Source MethodName Declaration public string MethodName Field Value Type Description System.String | Improve this Doc View Source ReturnType Declaration public string ReturnType Field Value Type Description System.String"
  },
  "api/August.Struct.ModuleHeader.html": {
    "href": "api/August.Struct.ModuleHeader.html",
    "title": "Struct ModuleHeader | ACME Documentation",
    "keywords": "Struct ModuleHeader Module header will help framework to identify target module Namespace : August.Struct Assembly : AugustCore.dll Syntax [Serializable] public struct ModuleHeader Fields | Improve this Doc View Source m_CommandPrefix Command of the module Declaration public string m_CommandPrefix Field Value Type Description System.String | Improve this Doc View Source m_ModuleDescription Description of the module Declaration public string m_ModuleDescription Field Value Type Description System.String | Improve this Doc View Source m_ModuleName Name of the module Declaration public string m_ModuleName Field Value Type Description System.String | Improve this Doc View Source m_VersionDetail Detail version Declaration public string m_VersionDetail Field Value Type Description System.String | Improve this Doc View Source m_VersionMajor Major version Declaration public int m_VersionMajor Field Value Type Description System.Int32 | Improve this Doc View Source m_VersionMinor Minor version Declaration public int m_VersionMinor Field Value Type Description System.Int32 Properties | Improve this Doc View Source Version The version string Declaration public readonly string Version { get; } Property Value Type Description System.String"
  },
  "api/August.Struct.Properties.html": {
    "href": "api/August.Struct.Properties.html",
    "title": "Struct Properties | ACME Documentation",
    "keywords": "Struct Properties Framework properties will effect the internal mechnism Namespace : August.Struct Assembly : AugustConfig.dll Syntax [Serializable] public struct Properties Fields | Improve this Doc View Source DefaultLoginAll Login all bot at the begining Declaration public bool DefaultLoginAll Field Value Type Description System.Boolean | Improve this Doc View Source ResetSessionAtRestart Clean login session at begining Declaration public bool ResetSessionAtRestart Field Value Type Description System.Boolean | Improve this Doc View Source UpdateMilliseconds Each update tick seconds Declaration public int UpdateMilliseconds Field Value Type Description System.Int32 Properties | Improve this Doc View Source Default Default properties setting data Declaration public static readonly Properties Default { get; } Property Value Type Description Properties"
  },
  "api/August.TextFileReader.html": {
    "href": "api/August.TextFileReader.html",
    "title": "Class TextFileReader | ACME Documentation",
    "keywords": "Class TextFileReader Create a .txt reader for module The data will update when file system changed is made. The subclass must have attribute FrameworkFilePathAttribute to mark the file path. Inheritance System.Object TextFileReader Implements ICustomModuleEvent IController Namespace : August Assembly : AugustCore.dll Syntax public abstract class TextFileReader : ICustomModuleEvent, IController Examples [FrameworkFilePathAttribute(\"FileName\", FileType.Data)] public TextIO : TextFileReader { public static TextIO controller; public TextIO() { controller = this; } public override string DefaultData() => \"Default text\"; } Constructors | Improve this Doc View Source TextFileReader() Initiaization for the text reader It will vailated to class and set the use properties. Declaration public TextFileReader() Properties | Improve this Doc View Source data Properties of the actual string data Declaration public string data { get; set; } Property Value Type Description System.String | Improve this Doc View Source frameworkContext Framework context Primary communication method with framework Declaration public FrameworkContext frameworkContext { get; } Property Value Type Description FrameworkContext | Improve this Doc View Source path Bot folder relative path to .txt file. Declaration public string path { get; protected set; } Property Value Type Description System.String | Improve this Doc View Source vaild Check is this component is vaild Declaration public bool vaild { get; protected set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source DefaultData() Default string data Declaration public abstract string DefaultData() Returns Type Description System.String | Improve this Doc View Source Exit() Declaration public virtual Task Exit() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Initialize() Declaration public virtual Task Initialize() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Load() Declaration public object Load() Returns Type Description System.Object | Improve this Doc View Source LoadData() Declaration public void LoadData() | Improve this Doc View Source ModuleLoaded() Declaration public virtual Task ModuleLoaded() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ModuleUnloading() Declaration public virtual Task ModuleUnloading() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Save() Declaration public void Save() | Improve this Doc View Source SaveData(Object) Declaration public void SaveData(object t) Parameters Type Name Description System.Object t | Improve this Doc View Source Start() Declaration public virtual Task Start() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Update() Declaration public virtual Task Update() Returns Type Description System.Threading.Tasks.Task Implements ICustomModuleEvent IController"
  },
  "articles/Advanced.html": {
    "href": "articles/Advanced.html",
    "title": "Rigidum iuvenis referat iamque Maera habebat quid | ACME Documentation",
    "keywords": "Rigidum iuvenis referat iamque Maera habebat quid Rotatis corpora aliquid regnum et sequerer Lorem markdownum in interea, in angues ausa facit solita . Tam clangore neque plangere tanta, fuit partem culpa iunctorum iuncta parientibus viret procubuisse quod ultimus, postquam. Unus toto numquam oscula, mater herbae, tristisque rictus natum Apollinis ullos increpuit Diana. Ut tamen vos, in videtur semper cum contentus fagus. Serta fovesque augusta terra vela: inter quam supplex, et. Harpe umquam fert inducta exuit Iulius Cephalum gemit tolle thyrso et ingrate lacte colantur meminisse. Macies meminitque illi; esse ante fortissime ignes, si. Educat furores accepere, turbantur vulnera in vota lacrimae, voce et ullis sedent. Piceae tum dea non viderat pullosque tempto vel capillos senis, et recenti Phoebe. Et Amuli de victos thalami, pavet usus auro est sua. Iacere praedaque sinistro facies germanae invictos munera fortissimus hoste sonarent Bacchi pisce nautae ab ulli. Corporibus nodus undas, more, sonant in retro vina remittat illa tum; hic. Cantusque laetus Et ille. Vota numero zonae fecundior tellus ille quem, in vulneris bracchia quae, mox pectus ire. Ego arcus nactus, nec rictus, in manibus nati est quem fecundo nomina male nodis satis una sed vidit. Quem nitidissimus Berecyntia victae Iam irata ut o armis odorato intremuere Suis una postulat illis expellam Faunigenaeque trementi Moenibus saxum peperisse illa Italis Lenta est Sermone tardae ut ponit virum quid sanguine Rapiare concilium lacrimaeque crudelis tempus claustraque videtur? In et mira sperato placuere sinisterior regis profundum dixit aemula! Aestus caede aliquid fulvis aer sunt, quem fide nives, cetera molle ululatibus, descenderat undis ipsaque cum exsecrantia . Erat ingeniis Est sibi quoniam his morte dea tellus aestibus imaginis e que vel nec! Verentur amomo. Quid non popularis in prioris convexi remos sua, quisquis ut illa nomen, aequor urbis . Frondescere fata excutiuntque Hylonome matrem! var error = whitelist; username.dos = web.eup_restore.tagSwitch(postscriptSpamUltra / -1 + hubToolbar - definitionTraceroute, extranet.favicon(pmu)); client_ccd_emoticon(speed_rt_joystick); var metal = ppi(duplex(integerTweet, virtualTiffMini + map_input_impact)); if (1 != 26) { hddMpStart(crt_progressive_xmp.touchscreen_processor_hard.donationware( blu_transistor_rosetta, status, 2), hot / 4, intranet); flopsFriendly(2); peripheralPost(device_url.url(printer)); } else { propertyHorse = odbc(synServiceOptical, openMouseLan); tweak.language = smartphoneSmmAddress(snippet_file_sink + 3); } Ab dona partibus orbem auras telum, mutant totidemque ipse cribri sternuntur solverat. Quoque sonuere ne iniuria carpere. Draconum leporem. Sed mixta conscia nisi lupi auxilio. Litora iuventus annis."
  },
  "articles/BuildIn.html": {
    "href": "articles/BuildIn.html",
    "title": "| ACME Documentation",
    "keywords": ""
  },
  "articles/Guide.html": {
    "href": "articles/Guide.html",
    "title": "August Guide | ACME Documentation",
    "keywords": "August Guide Rotatis corpora aliquid regnum et sequerer Lorem markdownum in interea, in angues ausa facit solita . Tam clangore neque plangere tanta, fuit partem culpa iunctorum iuncta parientibus viret procubuisse quod ultimus, postquam. Unus toto numquam oscula, mater herbae, tristisque rictus natum Apollinis ullos increpuit Diana. Ut tamen vos, in videtur semper cum contentus fagus. Serta fovesque augusta terra vela: inter quam supplex, et. Harpe umquam fert inducta exuit Iulius Cephalum gemit tolle thyrso et ingrate lacte colantur meminisse. Macies meminitque illi; esse ante fortissime ignes, si. Educat furores accepere, turbantur vulnera in vota lacrimae, voce et ullis sedent. Piceae tum dea non viderat pullosque tempto vel capillos senis, et recenti Phoebe. Et Amuli de victos thalami, pavet usus auro est sua. Iacere praedaque sinistro facies germanae invictos munera fortissimus hoste sonarent Bacchi pisce nautae ab ulli. Corporibus nodus undas, more, sonant in retro vina remittat illa tum; hic. Cantusque laetus Et ille. Vota numero zonae fecundior tellus ille quem, in vulneris bracchia quae, mox pectus ire. Ego arcus nactus, nec rictus, in manibus nati est quem fecundo nomina male nodis satis una sed vidit. Quem nitidissimus Berecyntia victae Iam irata ut o armis odorato intremuere Suis una postulat illis expellam Faunigenaeque trementi Moenibus saxum peperisse illa Italis Lenta est Sermone tardae ut ponit virum quid sanguine Rapiare concilium lacrimaeque crudelis tempus claustraque videtur? In et mira sperato placuere sinisterior regis profundum dixit aemula! Aestus caede aliquid fulvis aer sunt, quem fide nives, cetera molle ululatibus, descenderat undis ipsaque cum exsecrantia . Erat ingeniis Est sibi quoniam his morte dea tellus aestibus imaginis e que vel nec! Verentur amomo. Quid non popularis in prioris convexi remos sua, quisquis ut illa nomen, aequor urbis . Frondescere fata excutiuntque Hylonome matrem! var error = whitelist; username.dos = web.eup_restore.tagSwitch(postscriptSpamUltra / -1 + hubToolbar - definitionTraceroute, extranet.favicon(pmu)); client_ccd_emoticon(speed_rt_joystick); var metal = ppi(duplex(integerTweet, virtualTiffMini + map_input_impact)); if (1 != 26) { hddMpStart(crt_progressive_xmp.touchscreen_processor_hard.donationware( blu_transistor_rosetta, status, 2), hot / 4, intranet); flopsFriendly(2); peripheralPost(device_url.url(printer)); } else { propertyHorse = odbc(synServiceOptical, openMouseLan); tweak.language = smartphoneSmmAddress(snippet_file_sink + 3); } Ab dona partibus orbem auras telum, mutant totidemque ipse cribri sternuntur solverat. Quoque sonuere ne iniuria carpere. Draconum leporem. Sed mixta conscia nisi lupi auxilio. Litora iuventus annis."
  },
  "articles/Guide/Config.html": {
    "href": "articles/Guide/Config.html",
    "title": "| ACME Documentation",
    "keywords": ""
  },
  "articles/Guide/CreateBot.html": {
    "href": "articles/Guide/CreateBot.html",
    "title": "Create Bot profile | ACME Documentation",
    "keywords": "Create Bot profile In order to use August, you must create one bot profile first. To generate your bot profile go to Discord_Developer The official discord document has detail tutorial, it guides your through the bot creating process. Tutorail_By_Discord After generate your bot profile Went back to your August application Let's open the app/bots/[YourBotName]/setting.json And enter the most important data first Name Bot name, will effect console output message Token Paste your bot token you just gather from discord After modified the setting.json, Let's start the framework again ! Nice ! Now we have a working bot right now, We can start adding modules to increase the features."
  },
  "articles/Guide/ImportMod.html": {
    "href": "articles/Guide/ImportMod.html",
    "title": "| ACME Documentation",
    "keywords": ""
  },
  "articles/Guide/Installation.html": {
    "href": "articles/Guide/Installation.html",
    "title": "Guide to install August | ACME Documentation",
    "keywords": "Guide to install August First, go to the our github release page down the latest framework. Latest Release Once you finished download, unzip them, inner file structure should looks like this App publish start_server.bat Note start_server.bat Is how you start the framework Caution publish folder contain all the framework files, don't modify it unless you know what you're doing. Double click start_server.bat, it should give you an error message Note It is normal to have error message at first run. Because framework cannot detect working directoy, it will create one for you. It should generate two folder for you Now your file structure should looks like this App publish start_server.bat bots mods bots folder is where your bot profile stored, mods folder is where your modules stored. Now let's create an bot folder in bots folder And name it your bot name After that your file structure should looks like this App publish start_server.bat bots [CustomBotName] mods Run the start_server.bat again and you can see Note It is normal to have error message at second run as well. Because you didn't setup the bot profile yet, so it cannot connect successfully to discord server."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "August Discord Bot Builder Framework | ACME Documentation",
    "keywords": "August Discord Bot Builder Framework What is August ? August is a easy use discord bot framework, Traditionally if we want a bot to manage our discord server. if we have a little bit of coding skill, we will make one from the bottom top. Another solution is download already made bot in github and setup by youself, and for the people who don't know about coding, they might just use existing public bot for manage their discord server. The downside of this options is we have little control of what features the bot provide, so we end up stacking bunch of discord bot in our discord channel. The command system is messy, and because they're develop by different people, the format and the way we interact with is also different. this leads to headache. Why use August ? The August provides a easy way to let everyone including people who's not familiar with coding can setup their own bot with custom features. How did we achieve this ? By modularizing the discord bot features. This means user can simply download the mod, put them in a folder then run the framework. It is simple as that. Each custom modules can also provide config files to let user fully control the feature, Like the how the bot reply, how the message is looks like etc. Come to use it, what are you waiting for !! Installation"
  },
  "index.html": {
    "href": "index.html",
    "title": "DiscordFX | ACME Documentation",
    "keywords": "DiscordFX DocFX template to create documentation similar to Discord Installation Download the source or the zipped file from the releases page . In your DocFX project folder, create a new directory named templates , if it doesn't already exist. Copy the discordfx folder from this repository into your templates folder. In your docfx.json configuration file, add templates/discordfx path into build.template property { \"build\": { \"template\": [\"default\", \"templates/discordfx\"] } } Customization Colors You can change any color which are used by the template. They are defined in the styles/colors.css file. To change it, just override the value in your own styles/main.css file for example. Disclaimer Notice of Non-Affiliation and Disclaimer We are not affiliated, associated, authorized, endorsed by, or in any way officially connected with Discord, or any of its subsidiaries, partners or its affiliates. The official Discord website can be found at https://discord.com/ . \"Discord\", Discord logos, and other Discord trademarks are trademarks or registered trademarks of Discord or its affiliates in the U.S. and elsewhere."
  }
}